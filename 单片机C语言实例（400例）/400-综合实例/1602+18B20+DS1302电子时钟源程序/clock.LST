C51 COMPILER V8.02   CLOCK                                                                 05/26/2013 21:27:21 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE CLOCK
OBJECT MODULE PLACED IN clock.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE clock.c DEBUG OBJECTEXTEND

line level    source

   1          #include <AT89x51.h>
   2          #include <string.h>
   3          #include<intrins.h>
   4          
   5          #define LCM_RS P2_0 //定义引脚
   6          #define LCM_RW P2_1
   7          #define LCM_E P2_2
   8          #define LCM_Data P0
   9          #define Busy 0x80 //用于检测LCM状态字中的Busy标识
  10          #define uchar unsigned char
  11          
  12          uchar id,timecount,dipsmodid;
  13          bit lmcinit_or_not; //是否需要清屏标志位“1”为需要“0”为不需要
  14          bit flag,sflag; //flag是时钟冒号闪烁标志，sflag是温度负号显示标志
  15          void Disp_line1(void); //显示屏幕第一行 
  16          void Disp_line2(void); //显示屏幕第二行
  17          void id_case1_key();
  18          void Disp_mod0(void);//显示模式0
  19          void Disp_mod1(void);//显示模式
  20          
  21          
  22          //*********** DS1302 时间显示定义部分
  23          sbit T_CLK=P1^0;
  24          sbit T_IO =P1^1;
  25          sbit T_RST=P1^2;
  26          sbit ACC0=ACC^0;
  27          sbit ACC7=ACC^7;
  28          void Set(uchar,uchar);     //根据选择调整相应项目
  29          void   RTInputByte(uchar);       /* 输入 1Byte */
  30          uchar  RTOutputByte(void);       /* 输出 1Byte */
  31          void   W1302(uchar, uchar);   // 向DS1302写入一个字节
  32          uchar  R1302(uchar);          // 从DS1302读出一个字节
  33          void   Set1302(unsigned char * ); //  设置时间 
  34          bit sec,min,hour,year,mon,day,weekk; //闪烁标志位
  35          //初始化后设置为：04年12月2日星期4 0点0分0秒
  36          unsigned char inittime[7]={0x00,0x00,0x00,0x02,0x12,0x04,0x04};
  37          //                          秒  分钟 小时  日   月   年  星期
  38          
  39          //***** 18B20温度显示定义部
  40          sbit DQ=P3^3; //18B20 接P07口
  41          typedef unsigned char byte;
  42          typedef unsigned int  word;
  43          void Read_Temperature(char,char);
  44          void mychar(void);
  45          byte ow_reset(void);
  46          byte read_byte(void);
  47          void write_byte(char val);
  48          void adjust_res(char res); //res 分别等于 0x1f, 0x3f, 0x5f 温度读数分辨率分别对应
  49                                     //              0.5, 0.25, 0.125   
  50          
  51          //*******温度控制部分*********
  52          bit tl_flash_flag;       //下限闪烁标志
  53          bit th_flash_flag;       //上限闪烁标志
  54          bit tl_flag;               //下限越限标志  
  55          bit th_flag;               //上限越限标志  
C51 COMPILER V8.02   CLOCK                                                                 05/26/2013 21:27:21 PAGE 2   

  56          bit tl_sign,th_sign;            //温度零下标志 0：零上，1：零下
  57          char tempid;
  58          void Disp_Temp(void);    //显示上下限温度
  59          void Set_TH_Temp(void);  //设置温度上限
  60          void Set_TL_Temp(void);  //设置温度下限
  61          signed char tl=20,th=45;
  62          void Compare_Temp(signed char l,signed char h);     //比较温度
  63          void Tl_Al(void);         //下限越限报警
  64          void Th_Al(void);         //上限越限报警
  65          
  66          
  67          
  68          //******* 1602LCD驱动 **********************************************************
  69          void WriteDataLCM(unsigned char WDLCM);
  70          void WriteCommandLCM(unsigned char WCLCM,BuysC);
  71          unsigned char ReadStatusLCM(void);
  72          void LCMInit(void);
  73          void DisplayOneChar(unsigned char X, unsigned char Y, unsigned char DData);
  74          void DisplayListChar(unsigned char X, unsigned char Y, unsigned char code *DData);
  75          void Delay5Ms(void);
  76          void Delay400Ms(void);
  77          unsigned char code week[]={"Week."};
  78          
  79          
  80          void main(void)
  81          { 
  82   1        Delay400Ms(); //启动等待，等LCM讲入工作状态
  83   1        LCMInit(); //LCM初始化
  84   1        Delay5Ms(); //延时片刻(可不要)
  85   1        mychar();
  86   1        TMOD=0x01;
  87   1        TH0=(65535-50000)/256;
  88   1        TL0=(65535-50000)%256;
  89   1        EA=1;
  90   1        TR0=1;
  91   1        ET0=1;  
  92   1        W1302(0x90,0xa5);//打开充电二级管  一个二级管串联一个2K电阻 
  93   1        W1302(0x8e,0x80);//写保护，禁止写操作 
  94   1        adjust_res(0x1f); //调整18B20的分辨率 0x1f:0.5; 0x3f:0.25; 0x5f:0.125
  95   1        while(1)
  96   1          {              
  97   2               if (P1_7==0)
  98   2            {dipsmodid++;
  99   3                 lmcinit_or_not=1;
 100   3             if(dipsmodid>2) dipsmodid=0;
 101   3             while(P1_7==0);
 102   3            }
 103   2           switch(dipsmodid)
 104   2            {
 105   3             case 0:
 106   3              Disp_mod0();
 107   3              break;
 108   3             case 1:
 109   3              Disp_mod1();
 110   3              break;
 111   3                }
 112   2          }
 113   1      }
 114          /*//选择显示模?
 115          void Dispmod_id_case_key()
 116          {
 117           if (P0_3==0)
C51 COMPILER V8.02   CLOCK                                                                 05/26/2013 21:27:21 PAGE 3   

 118            {dipsmodid++;
 119             if(dipsmodid>1) dipsmodid=0;
 120            }
 121          }*/
 122          //显示模式0
 123          void Disp_mod0(void)
 124          {
 125   1       if(lmcinit_or_not==1)
 126   1        {LCMInit();
 127   2         lmcinit_or_not=0;
 128   2        }
 129   1       if ((P1_4|P1_5)==0) //初始化
 130   1        {
 131   2         Delay5Ms();
 132   2         if ((P1_4|P1_5)==0) Set1302(inittime);
 133   2        }
 134   1       //mychar(); //显示自定义字符
 135   1       if (P1_6==0) // 设置和选择项目键
 136   1            {
 137   2             Delay5Ms();
 138   2             if(P1_6==0){id++;if(id>7) id=0;}
 139   2             while(P1_6==0);    
 140   2            }
 141   1           switch(id)
 142   1            {
 143   2             case 0:
 144   2               sec=0;
 145   2               Disp_line1(); Disp_line2();
 146   2               break;
 147   2             case 1://年
 148   2               year=1;
 149   2               Disp_line1(); Disp_line2();                  
 150   2               id_case1_key();
 151   2               break;
 152   2             case 2://月
 153   2               year=0;mon=1;
 154   2               Disp_line1(); Disp_line2();                 
 155   2               id_case1_key();
 156   2               break;
 157   2             case 3://日
 158   2               mon=0;day=1;
 159   2               Disp_line1(); Disp_line2();
 160   2               id_case1_key();
 161   2               break;             
 162   2             case 4://星期
 163   2               day=0;weekk=1;
 164   2               Disp_line1(); Disp_line2();         
 165   2               id_case1_key();
 166   2               break;
 167   2             case 5://小时
 168   2               weekk=0;hour=1;
 169   2               Disp_line1(); Disp_line2(); 
 170   2               id_case1_key();      
 171   2               break;       
 172   2             case 6://分钟
 173   2               hour=0;min=1;
 174   2               Disp_line1(); Disp_line2(); 
 175   2               id_case1_key();
 176   2               break;
 177   2             case 7://秒
 178   2               min=0;sec=1;
 179   2               Disp_line1(); Disp_line2();             
C51 COMPILER V8.02   CLOCK                                                                 05/26/2013 21:27:21 PAGE 4   

 180   2               id_case1_key();
 181   2               break;              
 182   2            }
 183   1      }
 184          //显示模式1
 185          void Disp_mod1(void)
 186          {
 187   1       if(lmcinit_or_not==1)
 188   1        {LCMInit();
 189   2         lmcinit_or_not=0;
 190   2        }
 191   1       Read_Temperature(1,0);
 192   1       DisplayOneChar(0,1,'T');
 193   1       DisplayOneChar(1,1,'L');
 194   1       DisplayOneChar(2,1,':');
 195   1       DisplayOneChar(7,1,'T');
 196   1       DisplayOneChar(8,1,'H');
 197   1       DisplayOneChar(9,1,':');
 198   1       if(P1_6==0)
 199   1        { 
 200   2          if(P1_6==0)
 201   2           {
 202   3            tempid++;
 203   3            if(tempid>2) tempid=0;
 204   3            while(P1_6==0);
 205   3           }
 206   2        }
 207   1       switch(tempid)
 208   1        {
 209   2         case 0:
 210   2          tl_flash_flag=0;
 211   2          th_flash_flag=0;
 212   2          Disp_Temp();
 213   2         break;
 214   2         case 1:
 215   2          tl_flash_flag=1;
 216   2          th_flash_flag=0;
 217   2          Disp_Temp();
 218   2              Set_TL_Temp(); 
 219   2         break;
 220   2         case 2:
 221   2          tl_flash_flag=0;
 222   2          th_flash_flag=1;
 223   2          Disp_Temp();
 224   2          Set_TH_Temp();
 225   2         break;
 226   2        }
 227   1       Compare_Temp(tl,th);
 228   1       Tl_Al();
 229   1       Th_Al();
 230   1      }
 231          
 232          //显示上下限温度
 233          void Disp_Temp(void)
 234          {
 235   1       
 236   1       unsigned char tl_gw,tl_sw,tl_bw;               //下限温度的个位，十位，百位
 237   1       unsigned char th_gw,th_sw,th_bw;               //上限温度的个位，十位，百位
 238   1      
 239   1       tl_sign=tl>>7;
 240   1       if(tl_sign)
 241   1        {
C51 COMPILER V8.02   CLOCK                                                                 05/26/2013 21:27:21 PAGE 5   

 242   2         tl_bw=(~(tl-1))/100;         //计算百位
 243   2         tl_sw=((~(tl-1))-tl_bw*100)/10;              //计算十位
 244   2         tl_gw=(~(tl-1))-tl_bw*100-tl_sw*10;          //计算个位
 245   2        }
 246   1       else
 247   1        {
 248   2         tl_bw=(tl)/100;          
 249   2         tl_sw=(tl-tl_bw*100)/10;
 250   2         tl_gw=tl-tl_bw*100-tl_sw*10;
 251   2        }
 252   1      
 253   1       if(tl_flash_flag==1)
 254   1        {
 255   2         if(flag==1)
 256   2          {if(tl_sign)
 257   3                {
 258   4                 DisplayOneChar(3,1,0x2d);
 259   4             DisplayOneChar(4,1,tl_sw+0x30); 
 260   4             DisplayOneChar(5,1,tl_gw+0x30);
 261   4                }
 262   3               else
 263   3                {
 264   4                 DisplayOneChar(3,1,tl_bw+0x30);
 265   4             DisplayOneChar(4,1,tl_sw+0x30); //显示下限温度
 266   4             DisplayOneChar(5,1,tl_gw+0x30);
 267   4            } 
 268   3          }
 269   2         else
 270   2          {DisplayOneChar(3,1,0x20);
 271   3           DisplayOneChar(4,1,0x20); //显示下限温度
 272   3           DisplayOneChar(5,1,0x20);    
 273   3          }
 274   2        }
 275   1       else
 276   1        {
 277   2         DisplayOneChar(3,1,tl_bw+0x30);
 278   2         DisplayOneChar(4,1,tl_sw+0x30); //显示下限温度
 279   2         DisplayOneChar(5,1,tl_gw+0x30);
 280   2        }
 281   1      
 282   1        
 283   1        th_sign=th>>7;
 284   1        if(th_sign)
 285   1         {
 286   2          th_bw=(~(th-1))/100;                //计算百位
 287   2          th_sw=((~(th-1))-th_bw*100)/10;             //计算十位
 288   2          th_gw=(~(th-1))-th_bw*100-th_sw*10;         //计算个位
 289   2         }
 290   1        else
 291   1         {
 292   2          th_bw=(th)/100;          
 293   2          th_sw=(th-th_bw*100)/10;
 294   2          th_gw=th-th_bw*100-th_sw*10;
 295   2         }
 296   1      
 297   1      
 298   1       if(th_flash_flag==1)
 299   1        {
 300   2         if(flag==1)
 301   2          {if(th_sign)
 302   3                {
 303   4             DisplayOneChar(10,1,0x2d);
C51 COMPILER V8.02   CLOCK                                                                 05/26/2013 21:27:21 PAGE 6   

 304   4             DisplayOneChar(11,1,th_sw+0x30); //显示下限温度
 305   4             DisplayOneChar(12,1,th_gw+0x30);  
 306   4                }
 307   3               else
 308   3                {
 309   4             DisplayOneChar(10,1,th_bw+0x30);
 310   4             DisplayOneChar(11,1,th_sw+0x30); //显示下限温度
 311   4             DisplayOneChar(12,1,th_gw+0x30);  
 312   4            }
 313   3          }
 314   2         else
 315   2          {
 316   3               DisplayOneChar(10,1,0x20);
 317   3           DisplayOneChar(11,1,0x20); //显示下限温度
 318   3           DisplayOneChar(12,1,0x20);    
 319   3          }
 320   2        }
 321   1       else
 322   1        {
 323   2         DisplayOneChar(10,1,th_bw+0x30);
 324   2         DisplayOneChar(11,1,th_sw+0x30); //显示下限温度
 325   2         DisplayOneChar(12,1,th_gw+0x30);      
 326   2        }
 327   1      }
 328          
 329          //设置温度下限
 330          void Set_TL_Temp(void)
 331          {
 332   1       if(P1_5==0)
 333   1        {
 334   2         Delay5Ms();
 335   2         if(P1_5==0)
 336   2          {
 337   3               tl++;
 338   3               if(tl>125) tl=-55;
 339   3               //if(tl<-55) tl=155;
 340   3              }
 341   2         while(P1_5==0);
 342   2        }
 343   1       if(P1_4==0)
 344   1        {
 345   2         Delay5Ms();
 346   2         if(P1_4==0)
 347   2          {
 348   3               tl--;
 349   3               if(tl<-55) tl=125;
 350   3              }
 351   2        }
 352   1      }
 353          
 354          //设置温度上限
 355          void Set_TH_Temp(void)
 356          {
 357   1       if(P1_5==0)
 358   1        {
 359   2         Delay5Ms();
 360   2         if(P1_5==0)
 361   2          {
 362   3               th++;
 363   3               if(th>125) th=-55;
 364   3               //if(tl<-55) tl=155;
 365   3              }
C51 COMPILER V8.02   CLOCK                                                                 05/26/2013 21:27:21 PAGE 7   

 366   2         while(P1_5==0);
 367   2        }
 368   1       if(P1_4==0)
 369   1        {
 370   2         Delay5Ms();
 371   2         if(P1_4==0)
 372   2          {
 373   3               th--;
 374   3               if(th<-55) th=125;
 375   3              }
 376   2        }
 377   1      }
 378          
 379          void Compare_Temp(signed char l,signed char h)     //比较温度
 380          {
 381   1        unsigned char tl_temp;
 382   1        unsigned char y,s;
 383   1        //unsigned int  x;
 384   1        //unsigned char ct[8];
 385   1        union{byte c[2]; int x;}temp;
 386   1        
 387   1        ow_reset();
 388   1        write_byte(0xCC); // Skip ROM
 389   1        write_byte(0x44); // 转换温度
 390   1        ow_reset();
 391   1        write_byte(0xCC); //Skip ROM
 392   1        write_byte(0xbe); // 读取寄存器
 393   1        temp.c[1]=read_byte();//读出温度低8位
 394   1        temp.c[0]=read_byte();//读出温度高8位
 395   1       
 396   1        // 零下温度判断
 397   1        sflag=0; //温度零下标志 0：零上，1：零下
 398   1        if((temp.c[0]&0xf8)!=0x00)
 399   1         {
 400   2          sflag=1; //零下标志位置1
 401   2          temp.c[1]=~temp.c[1]; //低8位取反
 402   2          temp.c[0]=~temp.c[0]; //高8位取反
 403   2          tl_temp=temp.c[1]+1;  //低8位加1 
 404   2          temp.c[1]=tl_temp;    //计算后重新存入数组
 405   2          if(tl_temp>255) temp.c[0]++;  //如果低8位大于255，向高8位进1
 406   2         }
 407   1        y=0;
 408   1        s=0;
 409   1        y=temp.c[0]<<4;  
 410   1        s=temp.c[1]>>4;
 411   1        y=s|y;
 412   1        //x=((temp.c[0]&0x07)*256+temp.c[1])*.625;
 413   1        if(y<l)
 414   1         
 415   1          tl_flag=1;
 416   1         
 417   1        else
 418   1         
 419   1          tl_flag=0;
 420   1         
 421   1        if(y>h)
 422   1         
 423   1          th_flag=1;
 424   1         
 425   1        else
 426   1         
 427   1          th_flag=0;
C51 COMPILER V8.02   CLOCK                                                                 05/26/2013 21:27:21 PAGE 8   

 428   1         
 429   1      }
 430          
 431          void Tl_Al(void)         //下限越限报?
 432          {
 433   1       if(tl_flag==1)
 434   1        {
 435   2         if(flag==1)
 436   2          {    
 437   3           DisplayOneChar(9,0,'A'); 
 438   3           DisplayOneChar(10,0,'L');        
 439   3          }
 440   2         else
 441   2          {
 442   3           DisplayOneChar(9,0,0x20); 
 443   3           DisplayOneChar(10,0,0x20);    
 444   3          }
 445   2        } 
 446   1       else
 447   1        {
 448   2         DisplayOneChar(9,0,0x20); 
 449   2         DisplayOneChar(10,0,0x20);         
 450   2        }
 451   1      }
 452          
 453          void Th_Al(void)         //上限越限报警
 454          {
 455   1       if(th_flag==1)
 456   1        {
 457   2         if(flag==1)
 458   2          {    
 459   3           DisplayOneChar(13,0,'A'); 
 460   3           DisplayOneChar(14,0,'H');        
 461   3          }
 462   2         else
 463   2          {
 464   3           DisplayOneChar(13,0,0x20); 
 465   3           DisplayOneChar(14,0,0x20);    
 466   3          }
 467   2        } 
 468   1       else
 469   1        {
 470   2         DisplayOneChar(13,0,0x20); 
 471   2         DisplayOneChar(14,0,0x20);         
 472   2        }
 473   1      }
 474          
 475          
 476          
 477          //中断入口，冒号闪烁
 478          void t0(void) interrupt 1 using 0
 479          {
 480   1        TH0=(65535-50000)/256; //50ms定时
 481   1        TL0=(65535-50000)%256;  
 482   1        timecount++;
 483   1        if(timecount>9)
 484   1         {
 485   2          timecount=0;    
 486   2          flag=~flag;             
 487   2         }  
 488   1      }
 489          //id为1时的下一级选择
C51 COMPILER V8.02   CLOCK                                                                 05/26/2013 21:27:21 PAGE 9   

 490          void id_case1_key()
 491          {
 492   1        if (P1_5==0) //增加
 493   1            {
 494   2             Delay5Ms();
 495   2             if(P1_5==0) Set(id,0);  
 496   2             if(id!=7)  while(P1_5==0);    
 497   2            }
 498   1         if (P1_4==0)  //减少
 499   1            {
 500   2             Delay5Ms();
 501   2             if(P1_4==0) Set(id,1);          
 502   2             if(id!=7) while(P1_4==0);    
 503   2            }
 504   1      }
 505          
 506          //根据选择调整相应项目并写入DS1302
 507          void Set(uchar sel,uchar sel_1) 
 508          {
 509   1        signed char address,item;
 510   1        signed char max,mini;
 511   1        if(sel==7)  {address=0x80; max=0;mini=0;}     //秒
 512   1        if(sel==6)  {address=0x82; max=59;mini=0;}    //分钟
 513   1        if(sel==5)  {address=0x84; max=23;mini=0;}    //小时
 514   1        if(sel==3)  {address=0x86; max=31;mini=1;}    //日
 515   1        if(sel==2)  {address=0x88; max=12;mini=1;}    //月
 516   1        if(sel==1)  {address=0x8c; max=99;mini=0;}    //年
 517   1        if(sel==4)  {address=0x8a; max=7; mini=1;}    //星期
 518   1        
 519   1        item=R1302(address+1)/16*10+R1302(address+1)%16;
 520   1        if (sel_1==0) item++;  else item--;
 521   1        if(item>max) item=mini;   
 522   1        if(item<mini) item=max;
 523   1                 
 524   1        W1302(0x8e,0x00);//允许写操作
 525   1        W1302(address,item/10*16+item%10);
 526   1        W1302(0x8e,0x80);//写保护，禁止写操作  
 527   1      }
 528          
 529          //屏幕显示第一行 时间和温度
 530          void Disp_line1(void) 
 531          {  
 532   1        Read_Temperature(10,0); //温度显示
 533   1        //冒号闪烁     
 534   1        if(flag==0)
 535   1          {DisplayOneChar(3,0,0x3a); DisplayOneChar(6,0,0x3a);}
 536   1        else
 537   1          {DisplayOneChar(3,0,0x20); DisplayOneChar(6,0,0x20);}
 538   1      
 539   1        if(sec==1)  //秒闪烁标志位
 540   1          {
 541   2           if(flag==1)
 542   2             {    
 543   3              DisplayOneChar(7,0,R1302(0x81)/16+0x30); //显示秒
 544   3              DisplayOneChar(8,0,R1302(0x81)%16+0x30);        
 545   3             }
 546   2           else
 547   2             {
 548   3              DisplayOneChar(7,0,0x20); //显示秒
 549   3              DisplayOneChar(8,0,0x20);    
 550   3             }
 551   2          } 
C51 COMPILER V8.02   CLOCK                                                                 05/26/2013 21:27:21 PAGE 10  

 552   1        else
 553   1          {
 554   2           DisplayOneChar(7,0,R1302(0x81)/16+0x30); //显示秒
 555   2           DisplayOneChar(8,0,R1302(0x81)%16+0x30);         
 556   2          }    
 557   1         
 558   1        if(min==1)  //分钟闪烁标志位
 559   1          {
 560   2           if(flag==1)
 561   2             {    
 562   3              DisplayOneChar(4,0,R1302(0x83)/16+0x30); //显示分钟
 563   3              DisplayOneChar(5,0,R1302(0x83)%16+0x30);        
 564   3             }
 565   2           else
 566   2             {
 567   3              DisplayOneChar(4,0,0x20); //显示分钟
 568   3              DisplayOneChar(5,0,0x20);    
 569   3             }
 570   2          } 
 571   1        else
 572   1          {
 573   2           DisplayOneChar(4,0,R1302(0x83)/16+0x30); //显示分钟
 574   2           DisplayOneChar(5,0,R1302(0x83)%16+0x30);         
 575   2          } 
 576   1      
 577   1        if(hour==1)  //小时闪烁标志位
 578   1          {
 579   2           if(flag==1)
 580   2             {    
 581   3              DisplayOneChar(1,0,R1302(0x85)/16+0x30);//显示小时
 582   3              DisplayOneChar(2,0,R1302(0x85)%16+0x30); 
 583   3             }
 584   2           else
 585   2             {
 586   3              DisplayOneChar(1,0,0x20); //显示小时
 587   3              DisplayOneChar(2,0,0x20);    
 588   3             }
 589   2          } 
 590   1        else
 591   1         { 
 592   2          DisplayOneChar(1,0,R1302(0x85)/16+0x30);//显示小时
 593   2          DisplayOneChar(2,0,R1302(0x85)%16+0x30);
 594   2         }
 595   1      }
 596          
 597          // 屏幕显示第二行  日期和星期   
 598          void Disp_line2(void)
 599          {
 600   1        DisplayOneChar(3,1,0x2f); //显示固定字符
 601   1        DisplayOneChar(6,1,0x2f);
 602   1        DisplayListChar(10,1,week);
 603   1          
 604   1        if(year==1)  //年闪烁标志位
 605   1          {
 606   2           if(flag==1)
 607   2             {    
 608   3              DisplayOneChar(1,1,R1302(0x8d)/16+0x30);//显示年
 609   3              DisplayOneChar(2,1,R1302(0x8d)%16+0x30);
 610   3             }
 611   2           else
 612   2             {
 613   3              DisplayOneChar(1,1,0x20); //显示年
C51 COMPILER V8.02   CLOCK                                                                 05/26/2013 21:27:21 PAGE 11  

 614   3              DisplayOneChar(2,1,0x20);    
 615   3             }
 616   2          } 
 617   1        else
 618   1          { 
 619   2            DisplayOneChar(1,1,R1302(0x8d)/16+0x30);//显示年
 620   2            DisplayOneChar(2,1,R1302(0x8d)%16+0x30);
 621   2          }
 622   1           
 623   1        if(mon==1)  //月闪烁标志位
 624   1          {
 625   2           if(flag==1)
 626   2             {    
 627   3              DisplayOneChar(4,1,R1302(0x89)/16+0x30);//显示月 
 628   3              DisplayOneChar(5,1,R1302(0x89)%16+0x30);
 629   3             }
 630   2           else
 631   2             {
 632   3              DisplayOneChar(4,1,0x20); //显示月
 633   3              DisplayOneChar(5,1,0x20);    
 634   3             }
 635   2          } 
 636   1        else
 637   1          { 
 638   2            DisplayOneChar(4,1,R1302(0x89)/16+0x30);//显示月 
 639   2            DisplayOneChar(5,1,R1302(0x89)%16+0x30);
 640   2          }   
 641   1      
 642   1        if(day==1)  //日闪烁标志位
 643   1          {
 644   2           if(flag==1)
 645   2             {    
 646   3               DisplayOneChar(7,1,R1302(0x87)/16+0x30);//显示日
 647   3               DisplayOneChar(8,1,R1302(0x87)%16+0x30);
 648   3             }
 649   2           else
 650   2             {
 651   3              DisplayOneChar(7,1,0x20); //显示日
 652   3              DisplayOneChar(8,1,0x20);    
 653   3             }
 654   2          } 
 655   1        else
 656   1          { 
 657   2            DisplayOneChar(7,1,R1302(0x87)/16+0x30);//显示日
 658   2            DisplayOneChar(8,1,R1302(0x87)%16+0x30);
 659   2          }
 660   1          
 661   1         if(weekk==1)  //星期闪烁标志位
 662   1          {
 663   2           if(flag==1)
 664   2             {    
 665   3               DisplayOneChar(15,1,R1302(0x8b)%16+0x30);//显示星期
 666   3             }
 667   2           else
 668   2             {
 669   3              DisplayOneChar(15,1,0x20); //显示星期          
 670   3             }
 671   2          } 
 672   1        else
 673   1          { 
 674   2            DisplayOneChar(15,1,R1302(0x8b)%16+0x30);//显示星期
 675   2          }     
C51 COMPILER V8.02   CLOCK                                                                 05/26/2013 21:27:21 PAGE 12  

 676   1      }
 677          
 678          //********* LCM1602驱动程序 ***************
 679          //写数据
 680          void WriteDataLCM(unsigned char WDLCM)
 681          {
 682   1        ReadStatusLCM(); //检测忙
 683   1        LCM_Data = WDLCM;
 684   1        LCM_RS = 1;
 685   1        LCM_RW = 0;
 686   1        LCM_E = 0; //若晶振速度太高可以在这后加小的延时
 687   1        LCM_E = 0; //延时
 688   1        LCM_E = 1;
 689   1      }
 690          //写指令
 691          void WriteCommandLCM(unsigned char WCLCM,BuysC) //BuysC为0时忽略忙检测
 692          {
 693   1        if (BuysC) ReadStatusLCM(); //根据需要检测忙
 694   1        LCM_Data = WCLCM;
 695   1        LCM_RS = 0;
 696   1        LCM_RW = 0; 
 697   1        LCM_E = 0;
 698   1        LCM_E = 0;
 699   1        LCM_E = 1; 
 700   1      }
 701          //读状态
 702          unsigned char ReadStatusLCM(void)
 703          {
 704   1        LCM_Data = 0xFF; 
 705   1        LCM_RS = 0;
 706   1        LCM_RW = 1;
 707   1        LCM_E = 0;
 708   1        LCM_E = 0;
 709   1        LCM_E = 1;
 710   1        while (LCM_Data & Busy); //检测忙信号
 711   1        return(LCM_Data);
 712   1      }
 713          //LCM初始化
 714          void LCMInit(void) 
 715          {
 716   1        LCM_Data = 0;
 717   1        WriteCommandLCM(0x38,0); //三次显示模式设置，不检测忙信号
 718   1        Delay5Ms(); 
 719   1        WriteCommandLCM(0x38,0);
 720   1        Delay5Ms(); 
 721   1        WriteCommandLCM(0x38,0);
 722   1        Delay5Ms(); 
 723   1        WriteCommandLCM(0x38,1); //显示模式设置,开始要求每次检测忙信号
 724   1        WriteCommandLCM(0x08,1); //关闭显示
 725   1        WriteCommandLCM(0x01,1); //显示清屏
 726   1        WriteCommandLCM(0x06,1); // 显示光标移动设置
 727   1        WriteCommandLCM(0x0C,1); // 显示开及光标设置
 728   1      }
 729          //按指定位置显示一个字符
 730          void DisplayOneChar(unsigned char X, unsigned char Y, unsigned char DData)
 731          {
 732   1        Y &= 0x1;
 733   1        X &= 0xF; //限制X不能大于15，Y不能大于1
 734   1        if (Y) X |= 0x40; //当要显示第二行时地址码+0x40;
 735   1        X |= 0x80; //算出指令码
 736   1        WriteCommandLCM(X, 0); //这里不检测忙信号，发送地址码
 737   1        WriteDataLCM(DData);
C51 COMPILER V8.02   CLOCK                                                                 05/26/2013 21:27:21 PAGE 13  

 738   1      }
 739          //按指定位置显示一串字符  ***原来的遇到空格0x20就不显示***
 740          void DisplayListChar(unsigned char X, unsigned char Y, unsigned char code *DData)
 741          {
 742   1        unsigned char ListLength,j;
 743   1        ListLength = strlen(DData);
 744   1        Y &= 0x1;
 745   1        X &= 0xF; //限制X不能大于15，Y不能大于1
 746   1            if (X <= 0xF) //X坐标应小于0xF
 747   1              { 
 748   2                          for(j=0;j<ListLength;j++)
 749   2                            {
 750   3                     DisplayOneChar(X, Y, DData[j]); //显示单个字符
 751   3                     X++;
 752   3                    }
 753   2              }
 754   1      }
 755          //5ms延时
 756          void Delay5Ms(void)
 757          {
 758   1        unsigned int TempCyc = 5552;
 759   1        while(TempCyc--);
 760   1      }
 761          //400ms延时
 762          void Delay400Ms(void)
 763          {
 764   1        unsigned char TempCycA = 5;
 765   1        unsigned int TempCycB;
 766   1        while(TempCycA--)
 767   1         {
 768   2          TempCycB=7269;
 769   2          while(TempCycB--);
 770   2         };
 771   1      }
 772          
 773          //********DS1302读写程序***************
 774          /******************************************************************** 
 775           函 数 名：RTInputByte()
 776           功    能：实时时钟写入一字节
 777           说    明：往DS1302写入1Byte数据 (内部函数)
 778           入口参数：d 写入的数据 
 779           返 回 值：无  
 780           ***********************************************************************/
 781          void RTInputByte(uchar d) 
 782          { 
 783   1          uchar i;
 784   1          ACC = d;
 785   1          for(i=8; i>0; i--)
 786   1          {
 787   2              T_IO = ACC0;           /*相当于汇编中的 RRC */
 788   2              T_CLK = 1;
 789   2              T_CLK = 0;
 790   2              ACC = ACC >> 1; 
 791   2          } 
 792   1      }
 793          /******************************************************************** 
 794           函 数 名：RTOutputByte()
 795           功    能：实时时钟读取一字节
 796           说    明：从DS1302读取1Byte数据 (内部函数)
 797           入口参数：无  
 798           返 回 值：ACC
 799           设    计：zhaojunjie           日    期：2002-03-19
C51 COMPILER V8.02   CLOCK                                                                 05/26/2013 21:27:21 PAGE 14  

 800           修    改：                     日    期： 
 801          ***********************************************************************/
 802          uchar RTOutputByte(void) 
 803          { 
 804   1          uchar i;
 805   1          for(i=8; i>0; i--)
 806   1          {
 807   2              ACC = ACC >>1;         /*相当于汇编中的 RRC */
 808   2              ACC7 = T_IO;
 809   2              T_CLK = 1;
 810   2              T_CLK = 0;
 811   2          } 
 812   1          return(ACC); 
 813   1      }
 814          /******************************************************************** 
 815           函 数 名：W1302()
 816           功    能：往DS1302写入数据
 817           说    明：先写地址，后写命令/数据 (内部函数)
 818           调    用：RTInputByte() , RTOutputByte()
 819           入口参数：ucAddr: DS1302地址, ucData: 要写的数据
 820           返 回 值：无
 821           ***********************************************************************/
 822          void W1302(uchar ucAddr, uchar ucDa)
 823          {
 824   1          T_RST = 0;
 825   1          T_CLK = 0;
 826   1          T_RST = 1;
 827   1          RTInputByte(ucAddr);       /* 地址，命令 */
 828   1          RTInputByte(ucDa);       /* 写1Byte数据*/
 829   1          T_CLK = 1;
 830   1          T_RST = 0;
 831   1      }
 832          /******************************************************************** 
 833           函 数 名：R1302()
 834           功    能：读取DS1302某地址的数据
 835           说    明：先写地址，后读命令/数据 (内部函数)
 836           调    用：RTInputByte() , RTOutputByte()
 837           入口参数：ucAddr: DS1302地址
 838           返 回 值：ucData :读取的数据
 839          ***********************************************************************/
 840          uchar R1302(uchar ucAddr)
 841          {
 842   1          uchar ucData;
 843   1          T_RST = 0;
 844   1          T_CLK = 0;
 845   1          T_RST = 1;
 846   1          RTInputByte(ucAddr);             /* 地址，命令 */
 847   1          ucData = RTOutputByte();         /* 读1Byte数据 */
 848   1          T_CLK = 1;
 849   1          T_RST = 0;
 850   1          return(ucData);
 851   1      }
 852          
 853          /******************************************************************** 
 854           函 数 名：Set1302()
 855           功    能：设置初始时间
 856           说    明：先写地址，后读命令/数据(寄存器多字节方式)
 857           调    用：W1302()
 858           入口参数：pClock: 设置时钟数据地址 格式为: 秒 分 时 日 月 星期 年
 859                                         7Byte (BCD码)1B 1B 1B 1B 1B  1B  1B
 860           返 回 值：无
 861          ***********************************************************************/
C51 COMPILER V8.02   CLOCK                                                                 05/26/2013 21:27:21 PAGE 15  

 862          void Set1302(uchar *pClock) 
 863          {
 864   1          uchar i;
 865   1          uchar ucAddr = 0x80; 
 866   1          W1302(0x8e,0x00);           /* 控制命令,WP=0,写操作?*/
 867   1          for(i =7; i>0; i--)
 868   1          { 
 869   2              W1302(ucAddr,*pClock);  /* 秒 分 时 日 月 星期 年 */ 
 870   2              pClock++;
 871   2              ucAddr +=2;
 872   2          }
 873   1          W1302(0x8e,0x80);           /* 控制命令,WP=1,写保护?*/
 874   1      }
 875          
 876          //*********** 18B20驱动 **************************
 877          //延时
 878          void delay(unsigned int num)
 879          {
 880   1        while( --num ) ;
 881   1      }
 882          
 883          //复位
 884          byte ow_reset(void)
 885          {
 886   1        byte presence;
 887   1        DQ = 0;        //拉低总线
 888   1        delay(29);    // 保持 480us
 889   1        DQ = 1;       // 释放总线
 890   1        delay(3);     // 等待回复
 891   1        presence = DQ; // 读取信号
 892   1        delay(25);    // 等待结束信号
 893   1        return(presence); // 返回   0：正常 1：不存在
 894   1      }     
 895          
 896          //从 1-wire 总线上读取一个字节
 897          byte read_byte(void)
 898          {
 899   1        byte i;
 900   1        byte value = 0;
 901   1        for (i=8;i>0;i--)
 902   1        {
 903   2          value>>=1;
 904   2          DQ = 0; 
 905   2          DQ = 1;
 906   2          delay(1);  
 907   2          if(DQ)value|=0x80;
 908   2          delay(6); 
 909   2        }
 910   1        return(value);
 911   1      }
 912          
 913          //向 1-WIRE 总线上写一个字节
 914          void write_byte(char val)
 915          {
 916   1        byte i;
 917   1        for (i=8; i>0; i--) // 一次写一位
 918   1        {
 919   2          DQ = 0; // 
 920   2          DQ = val&0x01;
 921   2          delay(5); // 
 922   2          DQ = 1;
 923   2          val=val/2;
C51 COMPILER V8.02   CLOCK                                                                 05/26/2013 21:27:21 PAGE 16  

 924   2        }
 925   1        delay(5);
 926   1      }
 927          
 928          //读取和显示温度
 929          void  Read_Temperature(char xx,char yy)
 930          {
 931   1        unsigned char i,tl_temp;
 932   1        unsigned int  x;
 933   1        unsigned char ct[8];
 934   1        union{byte c[2]; int x;}temp;
 935   1        
 936   1        ow_reset();
 937   1        write_byte(0xCC); // Skip ROM
 938   1        write_byte(0x44); // 转换温度
 939   1        ow_reset();
 940   1        write_byte(0xCC); //Skip ROM
 941   1        write_byte(0xbe); // 读取寄存器
 942   1        temp.c[1]=read_byte();//读出温度低8位
 943   1        temp.c[0]=read_byte();//读出温度高8位
 944   1       
 945   1        // 零下温度判断
 946   1        sflag=0; //温度零下标志 0：零上，1：零下
 947   1        if((temp.c[0]&0xf8)!=0x00)
 948   1         {
 949   2          sflag=1; //零下标志位置1
 950   2          temp.c[1]=~temp.c[1]; //低8位取反
 951   2          temp.c[0]=~temp.c[0]; //高8位取反
 952   2          tl_temp=temp.c[1]+1;  //低8位加1 
 953   2          temp.c[1]=tl_temp;    //计算后重新存入数组
 954   2          if(tl_temp>255) temp.c[0]++;  //如果低8位大于255，向高8位进1
 955   2        }  
 956   1      
 957   1        x=((temp.c[0]&0x07)*256+temp.c[1])*.625;
 958   1        for(i=0;i<8;i++)
 959   1             {
 960   2               ct[i]=0;
 961   2             }
 962   1        i=0;
 963   1        while(x/10)
 964   1         {
 965   2          ct[i]=x%10;
 966   2          x=x/10;
 967   2          i++;
 968   2         }
 969   1        ct[i]=x;
 970   1      
 971   1        if(sflag==1) DisplayOneChar(xx-1,yy,0x2d);
 972   1        else         DisplayOneChar(xx-1,yy,0x20);
 973   1        DisplayOneChar(xx,  yy,ct[2]+0x30);//显示温度十位数
 974   1        DisplayOneChar(xx+1,yy,ct[1]+0x30);//显示温度个位数
 975   1        DisplayOneChar(xx+2,yy,0x2e);//显示小数点
 976   1        DisplayOneChar(xx+3,yy,ct[0]+0x30);//显示温度小数位
 977   1        DisplayOneChar(xx+4,yy,0x01);//显示自定义字符
 978   1        DisplayOneChar(xx+5,yy,0x43);//显示字符“C
 979   1      }
 980          
 981          //温度分辨率调整
 982          void adjust_res(char res) ///res 分别等于 0x1f, 0x3f, 0x5f 温度读数分辨率分别对应
 983                                     //              0.5, 0.25, 0.125   
 984          {
 985   1        ow_reset();        //复位
C51 COMPILER V8.02   CLOCK                                                                 05/26/2013 21:27:21 PAGE 17  

 986   1        write_byte(0xcc);  //跳过Rom
 987   1        write_byte(0x4e);  //写暂存器
 988   1        write_byte(0x02);  //写TH 
 989   1        write_byte(0x01);  //写TL
 990   1        //write_byte(0x5f);  //写结构寄存器
 991   1        write_byte(res);
 992   1        ow_reset();       //复位
 993   1        write_byte(0xcc); //跳过Rom 
 994   1        write_byte(0x48); //把暂存器内容写到EPRam中
 995   1      } 
 996          
 997          void mychar()//自定义字符
 998          {
 999   1      ///////////////////////自定义字符
1000   1       WriteCommandLCM(0x48, 0); //第一行
1001   1       WriteDataLCM(0x02);
1002   1       WriteCommandLCM(0x49, 0); //第2行
1003   1       WriteDataLCM(0x05);
1004   1       WriteCommandLCM(0x4a, 0); //第3
1005   1       WriteDataLCM(0x05);
1006   1       WriteCommandLCM(0x4b, 0); //第4
1007   1       WriteDataLCM(0x02);
1008   1       WriteCommandLCM(0x4c, 0); //第5
1009   1       WriteDataLCM(0x00);
1010   1       WriteCommandLCM(0x4d, 0); //第6
1011   1       WriteDataLCM(0x00);
1012   1       WriteCommandLCM(0x4e, 0); //第7
1013   1       WriteDataLCM(0x00);
1014   1       WriteCommandLCM(0x4f, 0); //第8
1015   1       WriteDataLCM(0x00);
1016   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2805    ----
   CONSTANT SIZE    =      6    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     13      39
   IDATA SIZE       =   ----    ----
   BIT SIZE         =     16    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
