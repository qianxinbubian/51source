C51 COMPILER V8.02   PASSWORD                                                              07/22/2009 13:42:13 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE PASSWORD
OBJECT MODULE PLACED IN PASSWORD.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE PASSWORD.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg52.h>
   2          #define uint unsigned int
   3          #define uchar unsigned char
   4          void key_scan();
   5          uchar count0,count1,count3,num,n=0,temp,a,j,count4;
   6          uchar mima[8];                                                  //初始密码存储区
   7          uchar tab_key[50];                                              //输入密码存储区
   8          uchar code table[]={
   9          0x3f,0x06,0x5b,0x4f,
  10          0x66,0x6d,0x7d,0x07,
  11          0x7f,0x6f,0x77,0x7c,
  12          0x39,0x5e,0x79,0x71};
  13          bit enterflag;                                                  //确认键按下与否的标志
  14          bit mimaflag;                                                   //密码正确与否的标志
  15          bit xiugaiflag;                                                 //修改密码标志  
  16          bit enter1flag;                                         //修改密码确认键标志    
  17          sbit red=P3^7;
  18          sbit bell=P3^6;
  19          sbit rs=P2^0;
  20           sbit rw=P2^1;
  21          sbit lcden=P2^2;
  22          sbit scl=P3^4;
  23          sbit sda=P3^5;
  24          uchar code table1[]="input the passco";
  25          uchar code table2[]="de:     --------";
  26          uchar code table3[]="*";
  27          uchar code table4[]="right   (^_^)   ";
  28          uchar code table5[]="first  error!!!!";
  29          uchar code table6[]="second error!!!!";
  30          uchar code table7[]="third error see ";
  31          uchar code table8[]="u tomorrow (^_^)";
  32          uchar code table9[]="define the passc";
  33          uchar code table10[]="ode:    --------";
  34          uchar code table11[]="code   is    new";
  35          //******************************键盘消抖函数*******************************
  36          void delay1()
  37          { ;; }
  38          void delay2(uchar x)
  39          {
  40   1              uchar a,b;
  41   1              for(a=x;a>0;a--)
  42   1               for(b=100;b>0;b--);
  43   1      }
  44                  
  45          void delay(uint z)
  46          {
  47   1              uint x,y;
  48   1              for(x=z;x>0;x--)
  49   1                      for(y=110;y>0;y--);
  50   1      }
  51          
  52          //****************************e^2room的初始化*******************************
  53          void start()  //开始信号
  54          {       
  55   1              sda=1;
C51 COMPILER V8.02   PASSWORD                                                              07/22/2009 13:42:13 PAGE 2   

  56   1              delay1();
  57   1              scl=1;
  58   1              delay1();
  59   1              sda=0;
  60   1              delay1();
  61   1      }
  62          
  63          void stop()   //停止
  64          {
  65   1              sda=0;
  66   1              delay1();
  67   1              scl=1;
  68   1              delay1();
  69   1              sda=1;
  70   1              delay1();
  71   1      }
  72          //****************************应答信号*************************************
  73          void respond()  
  74          {
  75   1              uchar i;
  76   1              scl=1;
  77   1              delay1();
  78   1              while((sda==1)&&(i<250))i++;
  79   1              scl=0;
  80   1              delay1();
  81   1      }
  82          //*****************************写字节操作函数**********************************
  83          void write_byte(uchar date)
  84          {
  85   1              uchar i,temp;
  86   1              temp=date;
  87   1              for(i=0;i<8;i++)
  88   1              {
  89   2                      temp=temp<<1;                   //保持最高位，左移到进位CY
  90   2                      scl=0;
  91   2                  delay1();
  92   2                      sda=CY;
  93   2                      delay1();
  94   2                      scl=1;
  95   2                      delay1();
  96   2              }
  97   1              scl=0;
  98   1              delay1();
  99   1              sda=1;//总线释放
 100   1              delay1();
 101   1      }
 102          //*******************************读字节操作函数*****************************
 103          uchar read_byte()
 104          {
 105   1              uchar i,k;
 106   1              scl=0;
 107   1              delay1();
 108   1              sda=1;
 109   1              delay1();
 110   1              for(i=0;i<8;i++)
 111   1              {
 112   2                      scl=1;
 113   2                      delay1();       
 114   2                      k=(k<<1)|sda;    //或运算，放到最低位
 115   2                      scl=0;
 116   2                      delay1();       
 117   2              }
C51 COMPILER V8.02   PASSWORD                                                              07/22/2009 13:42:13 PAGE 3   

 118   1              return k;
 119   1      }
 120          //**********************************写地址函数******************************
 121          void write_add(uchar address,uchar date)
 122          {
 123   1              start();
 124   1              write_byte(0xa0);
 125   1              respond();
 126   1              write_byte(address);
 127   1              respond();
 128   1              write_byte(date);
 129   1              respond();
 130   1              stop();
 131   1      }
 132          //*******************************读地址函数*************************************
 133          uchar read_add(uchar address)
 134          {
 135   1              uchar date;
 136   1              start();
 137   1              write_byte(0xa0);
 138   1              respond();
 139   1              write_byte(address);
 140   1              respond();
 141   1              start();
 142   1              write_byte(0xa1);
 143   1              respond();
 144   1              date=read_byte();
 145   1              stop();
 146   1              return date;
 147   1      }
 148          //****************************LCD1602的初始化*******************************
 149          void write_com(uchar com)
 150          {
 151   1              rs=0;
 152   1              lcden=0;
 153   1              P0=com;
 154   1              delay(5);
 155   1              lcden=1;
 156   1              delay(5);
 157   1              lcden=0;        
 158   1      }
 159          
 160          void write_date(uchar date)
 161          {
 162   1              rs=1;
 163   1              lcden=0;
 164   1              P0=date;
 165   1              delay(5);
 166   1              lcden=1;
 167   1              delay(5);
 168   1              lcden=0;        
 169   1      }
 170          
 171          //***************************************密码比较函数********************************
 172          bit mimacmp()                                   
 173          {
 174   1              bit flag;
 175   1              uchar i;
 176   1              for(i=0;i<8;i++)
 177   1                      {
 178   2                              if(mima[i]==tab_key[i])
 179   2                                      flag=1;
C51 COMPILER V8.02   PASSWORD                                                              07/22/2009 13:42:13 PAGE 4   

 180   2                              else
 181   2                                      {
 182   3                                      flag=0;
 183   3                                      i=8;
 184   3                                      }
 185   2                      }
 186   1              return(flag);                                                   //返回flag
 187   1      }
 188          
 189          ////**********************************LCD显示函数开始**************************************
 190          void lcd_display()
 191          {
 192   1      uchar i=0;
 193   1      write_com(0x80+0x40+8);
 194   1      for(i=0;i<n;i++)
 195   1      {
 196   2      write_date(table3[0]);
 197   2      }
 198   1      }
 199          
 200          
 201          //****************************************键盘功能分配函数群开始****************************
 202          //** 0 ** 1 **2 ** 3**                     
 203          //** 4** 5** 6 **7 **
 204          //**8** 9** 确认（A）  **无效（B）
 205          //**取消（C）**修改密码键（D）**确认修改键（E）**无效（F）
 206          
 207          
 208          
 209          
 210          void key_manage1()
 211          {
 212   1      tab_key[n]=0;
 213   1      n++;
 214   1      if(xiugaiflag==1)
 215   1      {
 216   2      mima[count4]=0;
 217   2      count4++;
 218   2      }
 219   1      }
 220          
 221          void key_manage2()
 222          {
 223   1      
 224   1      tab_key[n]=1;
 225   1      n++;
 226   1      if(xiugaiflag==1)
 227   1      {
 228   2      mima[count4]=1;
 229   2      count4++;
 230   2      }
 231   1      }
 232          
 233          void key_manage3()
 234          {
 235   1      
 236   1      tab_key[n]=2;
 237   1      n++;
 238   1      if(xiugaiflag==1)
 239   1      {
 240   2      mima[count4]=2;
 241   2      count4++;
C51 COMPILER V8.02   PASSWORD                                                              07/22/2009 13:42:13 PAGE 5   

 242   2      }
 243   1      }
 244          
 245          void key_manage4()
 246          {
 247   1      tab_key[n]=3;
 248   1      n++;
 249   1      if(xiugaiflag==1)
 250   1      {
 251   2      mima[count4]=3;
 252   2      count4++;
 253   2      }
 254   1      }
 255          
 256          void key_manage5()
 257          {
 258   1      tab_key[n]=4;
 259   1      n++;
 260   1      if(xiugaiflag==1)
 261   1      {
 262   2      mima[count4]=4;
 263   2      count4++;
 264   2      }
 265   1      }
 266          
 267          void key_manage6()
 268          {
 269   1      tab_key[n]=5;
 270   1      n++;
 271   1      if(xiugaiflag==1)
 272   1      {
 273   2      mima[count4]=5;
 274   2      count4++;
 275   2      }
 276   1      }
 277          void key_manage7()
 278          {
 279   1      tab_key[n]=6;
 280   1      n++;
 281   1      if(xiugaiflag==1)
 282   1      {
 283   2      mima[count4]=6;
 284   2      count4++;
 285   2      }
 286   1      }
 287          void key_manage8()
 288          {
 289   1      tab_key[n]=7;
 290   1      n++;
 291   1      if(xiugaiflag==1)
 292   1      {
 293   2      mima[count4]=7;
 294   2      count4++;
 295   2      }
 296   1      }
 297          
 298          void key_manage9()
 299          {
 300   1      tab_key[n]=8;
 301   1      n++;
 302   1      if(xiugaiflag==1)
 303   1      {
C51 COMPILER V8.02   PASSWORD                                                              07/22/2009 13:42:13 PAGE 6   

 304   2      mima[count4]=8;
 305   2      count4++;
 306   2      }
 307   1      }
 308          void key_manage10()
 309          {
 310   1      tab_key[n]=9;
 311   1      n++;
 312   1      if(xiugaiflag==1)
 313   1      {
 314   2      mima[count4]=9;
 315   2      count4++;
 316   2      }
 317   1      }
 318          //**********************************确认键**************************************************************  
 319          void key_manage11()
 320          {
 321   1              enterflag=1;                                    //确认键按下
 322   1              if(n==8)                                           //只有输入8个密码后按确认才做比较
 323   1                      mimaflag=mimacmp();
 324   1              else
 325   1                      mimaflag=0;
 326   1               if(enterflag==1)
 327   1                      {
 328   2                              enterflag=0;
 329   2                              n=0;
 330   2                              //用FFFFFFFF清除已经输入的密码
 331   2                              for(count3=0;count3<8;count3++)
 332   2                              {       
 333   3                                      delay(5);
 334   3                                      tab_key[count3]=0x0f;           
 335   3                              }               
 336   2                                              
 337   2                              TR1=1;                                                                  //打开计数器1
 338   2                              count1=0;                                                               //定时器1由50MS累计到1S所用的计数器
 339   2                              if(mimaflag==1)
 340   2                              {       
 341   3                                      a=0;
 342   3                              
 343   3                                      write_com(0x01);
 344   3                                      write_com(0x80);
 345   3                                      for(count3=0;count3<16;count3++)
 346   3                                      {
 347   4                                              write_date(table4[count3]);     //密码正确，显示RIGHT，绿灯亮
 348   4                                              delay(5);
 349   4                                      }
 350   3                              }
 351   2                                      
 352   2                          else
 353   2                              {   
 354   3                                      n=0;
 355   3                                      red=0;
 356   3                              bell=0;
 357   3                                      a++;
 358   3                                      if(a==1)
 359   3                                      {
 360   4                                              for(count3=0;count3<8;count3++) //ffffffff清除密码
 361   4                                              {       
 362   5                                                      delay(5);
 363   5                                                      tab_key[count3]=0x0f;           
 364   5                                              }
 365   4                                              write_com(0x01);                                                                                
C51 COMPILER V8.02   PASSWORD                                                              07/22/2009 13:42:13 PAGE 7   

 366   4                                              write_com(0x80);
 367   4                                              for(count3=0;count3<16;count3++)
 368   4                                              {
 369   5                                                      write_date(table5[count3]);     //密码错误，显示 first error，红灯亮
 370   5                                                      delay(5);
 371   5                                              }
 372   4                                                      TR1=1;
 373   4                                      }
 374   3                                      if(a==2)
 375   3                                      {       
 376   4                                              for(count3=0;count3<8;count3++) //ffffffff清除密码
 377   4                                              {       
 378   5                                                      delay(5);
 379   5                                                      tab_key[count3]=0x0f;           
 380   5                                              }
 381   4                                                      write_com(0x01);
 382   4                                                      write_com(0x80);
 383   4                                                      for(count3=0;count3<16;count3++)
 384   4                                                      {
 385   5                                                              write_date(table6[count3]);     //密码错误，显示SECOND ERROR，红灯亮
 386   5                                                              delay(5);
 387   5                                                      }
 388   4                                                              TR1=1;
 389   4                                      }
 390   3                                              
 391   3                                        if(a==3)
 392   3                                              {       
 393   4                                                      for(count3=0;count3<8;count3++) //ffffffff清除密码
 394   4                                                      {       
 395   5                                                              delay(5);
 396   5                                                              tab_key[count3]=0x0f;           
 397   5                                                      }
 398   4                                                      write_com(0x01);
 399   4                                                      write_com(0x80);
 400   4                                                      for(count3=0;count3<16;count3++)
 401   4                                                      {
 402   5                                                              write_date(table7[count3]);     //密码错误，显示third error see，红灯亮
 403   5                                                              delay(5);
 404   5                                                      }
 405   4                                                      write_com(0x80+0x40);
 406   4                                                      for(count3=0;count3<16;count3++)
 407   4                                                      {
 408   5                                                              write_date(table8[count3]);//密码错误，显示 U TOMORROW ,红灯亮
 409   5                                                              delay(5);
 410   5                                                      }
 411   4                                                              TR1=0;
 412   4                                                                      
 413   4                                              }
 414   3                                                              
 415   3                      }
 416   2              }
 417   1      
 418   1      }
 419          void key_manage12()
 420          {
 421   1      tab_key[n]=11;
 422   1      n++;                                              //密码计数清零
 423   1      
 424   1      }
 425          //****************************************************取消键********************************************  
 426          void key_manage13()
 427          {
C51 COMPILER V8.02   PASSWORD                                                              07/22/2009 13:42:13 PAGE 8   

 428   1      
 429   1      n=0;                                              //密码计数清零
 430   1      write_com(0x80);                                                //指针所指位置
 431   1      for(count3=0;count3<16;count3++)
 432   1      {
 433   2              write_date(table1[count3]);             //第一行显示INPUT THE PASSPORD:
 434   2              delay(5);
 435   2      }
 436   1      write_com(0x80+0x40);
 437   1      for(count3=0;count3<16;count3++)
 438   1      {
 439   2              write_date(table2[count3]);     //开机显示--------
 440   2              delay(5);
 441   2              tab_key[count3]=0x0f;                   //用FFFFFFFF清楚已经输入的密码
 442   2      }
 443   1      
 444   1      }
 445          //*******************************************修改密码键**********************************
 446          void key_manage14()
 447          {
 448   1              uchar aa=0;
 449   1              n=0;
 450   1              xiugaiflag=1;
 451   1              write_com(0x01);
 452   1              write_com(0x80);
 453   1      for(count3=0;count3<16;count3++)
 454   1      {
 455   2              write_date(table9[count3]);     //显示define the password
 456   2              delay(5);
 457   2              tab_key[count3]=0x0f;                   //用FFFFFFFF清楚已经输入的密码
 458   2      }
 459   1              write_com(0x80+0x40);
 460   1      for(count3=0;count3<16;count3++)
 461   1      {
 462   2              write_date(table10[count3]);    //显示--------
 463   2              delay(5);
 464   2      }
 465   1      TR0=1;
 466   1      
 467   1      }
 468          //******************************************修改密码键的确认键********************************
 469          void key_manage15()
 470          {
 471   1      n=0;
 472   1      enter1flag=1;
 473   1      if(enter1flag==1)
 474   1      {
 475   2              enter1flag=0;
 476   2              count4=0;
 477   2              for(count3=0;count3<16;count3++)
 478   2              {
 479   3              tab_key[count3]=0x0f;                   //用FFFFFFFF清楚已经输入的密码
 480   3              }
 481   2              write_com(0x01);
 482   2              write_com(0x80);
 483   2              for(count3=0;count3<16;count3++)
 484   2              {
 485   3                      write_date(table11[count3]);
 486   3                      delay(100);
 487   3              }
 488   2              TR1=1;
 489   2              count1=0;
C51 COMPILER V8.02   PASSWORD                                                              07/22/2009 13:42:13 PAGE 9   

 490   2      }
 491   1      }
 492          void key_manage16()
 493          {
 494   1      tab_key[n]=15;
 495   1      n++;
 496   1      }
 497          
 498          //****************************************定时器1的50MS,共延时1秒*****************************
 499          void time_1() interrupt 3
 500          {       
 501   1      
 502   1              TH1=(65536-50000)/256;
 503   1              TL1=(65536-50000)%256;
 504   1              if(count1<20)
 505   1              {
 506   2                      count1++;
 507   2              }
 508   1              else                                                    //计时到1S
 509   1              {
 510   2                      TR1=0;
 511   2                      count1=0;
 512   2                      mimaflag=0;
 513   2      
 514   2                      red=1;
 515   2                      bell=1;
 516   2                      //显示FFFFFFFF
 517   2                      write_com(0x01);
 518   2                      write_com(0x80);
 519   2                      for(count3=0;count3<16;count3++)
 520   2                              {
 521   3                                      write_date(table1[count3]);     //显示INPUT THE PASSCODE
 522   3                                      delay(5);
 523   3                              }
 524   2                      write_com(0x80+0x40);
 525   2                      for(count3=0;count3<16;count3++)
 526   2                              {
 527   3                                      write_date(table2[count3]);     //开机显示FFFFFFFF
 528   3                                      delay(5);
 529   3                              }
 530   2              }
 531   1      
 532   1      }
 533          //***********************************************定时0**********************************************
 534          void time_0() interrupt 1
 535          {       
 536   1      
 537   1              TH0=(65536-50000)/256;
 538   1              TL0=(65536-50000)%256;
 539   1      if(count4<8)
 540   1      {
 541   2              key_scan();
 542   2      }
 543   1      else
 544   1      {
 545   2              TR0=0;
 546   2              count4=0;
 547   2      }
 548   1      }
 549          
 550          //初始化函数
 551          void init()
C51 COMPILER V8.02   PASSWORD                                                              07/22/2009 13:42:13 PAGE 10  

 552          {       
 553   1      
 554   1              uchar i;
 555   1              lcden=0;
 556   1              write_com(0x38);                                        //打开显示模式设置
 557   1              write_com(0x0c);                                        //打开显示，光标等等设置未零
 558   1              write_com(0x06);                                        //当读或写一个字符后地址指针加一，且光标加一，当写一个字符后整频显示左移，
 559   1              write_com(0x01);                                        //清零指令
 560   1              write_com(0x80);                                        //指针所指位置
 561   1      
 562   1              //定时器初始化
 563   1              TMOD=0x11;                                                      //T0,T1工作方式1
 564   1              TH0=(65536-2000)/256;
 565   1              TL0=(65536-2000)%256;                           //T0初始化2MS
 566   1      
 567   1              TH1=(65536-50000)/256;
 568   1              TL1=(65536-50000)%256;                          //T1初始化50MS
 569   1      
 570   1              TR1=0;
 571   1              ET1=1;
 572   1              EA=1;
 573   1              TR0=0;
 574   1              ET0=1;
 575   1      
 576   1              count0=0;                                                       //初始没有密码输入，故为零
 577   1              enterflag=0;                                            //没有确认键按下
 578   1              mimaflag=0;                                                     //密码正确与否键先置零
 579   1                                              
 580   1              red=1;                                                          //红灯不亮
 581   1      //************密码存入EPROM中**********************************
 582   1              sda=1;
 583   1              delay(5);
 584   1              scl=1;
 585   1              delay(5);
 586   1              for(i=0;i<8;i++)
 587   1              {
 588   2                      write_add(i,8);
 589   2                      delay2(100);
 590   2              }
 591   1              for(i=0;i<8;i++)
 592   1              {
 593   2                      mima[i]=read_add(i);
 594   2                      delay(5);
 595   2              }
 596   1      
 597   1      }
 598          void main()
 599          {       rw=0;           
 600   1              init();
 601   1              write_com(0x80);                                                //指针所指位置
 602   1              for(count3=0;count3<16;count3++)
 603   1              {
 604   2                      write_date(table1[count3]);             //第一行显示INPUT THE PASSPORD:
 605   2                      delay(5);
 606   2              }
 607   1              write_com(0x80+0x40);
 608   1              for(count3=0;count3<16;count3++)
 609   1              {
 610   2                      write_date(table2[count3]);             //开机显示FFFFFFFF
 611   2                      delay(5);
 612   2              }
 613   1              while(1)
C51 COMPILER V8.02   PASSWORD                                                              07/22/2009 13:42:13 PAGE 11  

 614   1              {
 615   2                      key_scan();                                             //调用键盘扫描函数
 616   2                      lcd_display(); 
 617   2              }
 618   1                       
 619   1      }
 620          //**************************************************键盘扫描函数开始********************************
 621          void key_scan()
 622          {
 623   1      //**********扫描第一行*********
 624   1      P1=0xfe; 
 625   1      temp=P1;
 626   1      temp=temp&0xf0;
 627   1      if(temp!=0xf0)
 628   1      {
 629   2      delay(100);
 630   2      if(temp!=0xf0)
 631   2      {
 632   3      temp=P1;
 633   3      switch(temp)
 634   3      {
 635   4      case 0xee:
 636   4      key_manage1();
 637   4      break;
 638   4      
 639   4      case 0xde:
 640   4      key_manage2();
 641   4      break;
 642   4      
 643   4      case 0xbe:
 644   4      key_manage3();
 645   4      break;
 646   4      
 647   4      case 0x7e:
 648   4      key_manage4();
 649   4      break;
 650   4      }
 651   3      while(temp!=0xf0)
 652   3      {
 653   4      temp=P1;
 654   4      temp=temp&0xf0;
 655   4      }
 656   3      }
 657   2      }
 658   1      //**************************************************扫描第二行***********************************
 659   1      P1=0xfd; 
 660   1      temp=P1;
 661   1      temp=temp&0xf0;
 662   1      if(temp!=0xf0)
 663   1      {
 664   2      delay(100);
 665   2      if(temp!=0xf0)
 666   2      {
 667   3      temp=P1;
 668   3      switch(temp)
 669   3      {
 670   4      case 0xed:
 671   4      key_manage5();
 672   4      break;
 673   4      
 674   4      case 0xdd:
 675   4      key_manage6();
C51 COMPILER V8.02   PASSWORD                                                              07/22/2009 13:42:13 PAGE 12  

 676   4      break;
 677   4      
 678   4      case 0xbd:
 679   4      key_manage7();
 680   4      break;
 681   4      
 682   4      case 0x7d:
 683   4      key_manage8();
 684   4      break;
 685   4      }
 686   3      while(temp!=0xf0)
 687   3      {
 688   4      temp=P1;
 689   4      temp=temp&0xf0;
 690   4      }
 691   3      }
 692   2      }
 693   1      //*********************************************扫描第三行***********************************
 694   1      P1=0xfb; 
 695   1      temp=P1;
 696   1      temp=temp&0xf0;
 697   1      if(temp!=0xf0)
 698   1      {
 699   2      delay(100);
 700   2      if(temp!=0xf0)
 701   2      {
 702   3      temp=P1;
 703   3      switch(temp)
 704   3      {
 705   4      case 0xeb:
 706   4      key_manage9();
 707   4      break;
 708   4      
 709   4      case 0xdb:
 710   4      key_manage10();
 711   4      break;
 712   4      
 713   4      case 0xbb:
 714   4      key_manage11();
 715   4      break;
 716   4      
 717   4      case 0x7b:
 718   4      key_manage12();
 719   4      break;
 720   4      }
 721   3      while(temp!=0xf0)
 722   3      {
 723   4      temp=P1;
 724   4      temp=temp&0xf0;
 725   4      }
 726   3      }
 727   2      }
 728   1      
 729   1      //***************************************************扫描第四行****************************************
 730   1      P1=0xf7;
 731   1      temp=P1;
 732   1      temp=temp&0xf0;
 733   1      if(temp!=0xf0)
 734   1      {
 735   2      delay(100);
 736   2      if(temp!=0xf0)
 737   2      {
C51 COMPILER V8.02   PASSWORD                                                              07/22/2009 13:42:13 PAGE 13  

 738   3      temp=P1;
 739   3      switch(temp)
 740   3      {
 741   4      case 0xe7:
 742   4      key_manage13();
 743   4      break;
 744   4      
 745   4      case 0xd7:
 746   4      key_manage14();
 747   4      break;
 748   4      
 749   4      case 0xb7:
 750   4      key_manage15();
 751   4      break;
 752   4      
 753   4      case 0x77:
 754   4      key_manage16();
 755   4      break;
 756   4      }
 757   3      while(temp!=0xf0)
 758   3      {
 759   4      temp=P1;
 760   4      temp=temp&0xf0;
 761   4      }
 762   3      }
 763   2      }
 764   1      } 
 765          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1712    ----
   CONSTANT SIZE    =    188    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     67       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
