C51 COMPILER V8.18   DA1302                                                                12/15/2009 15:11:35 PAGE 1   


C51 COMPILER V8.18, COMPILATION OF MODULE DA1302
OBJECT MODULE PLACED IN da1302.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE da1302.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*============================================================
   2          1602液晶显示DS1302时钟
   3          =============================================================*/
   4          
   5          #include <AT89x51.h>
   6          #include <string.h>
   7          #include < intrins.h >
   8          #define delayNOP() ; {_nop_() ;_nop_() ;_nop_() ;_nop_() ;} ;
   9          #define LCM_RW P2_1 //定义引脚
  10          #define LCM_RS P2_0
  11          #define LCM_E P2_2
  12          #define LCM_Data P0
  13          #define Busy 0x80          //用于检测LCM状态字中的Busy标识
  14          #define uchar unsigned char
  15          sbit T_CLK=P1^0;
  16          sbit T_IO =P1^1;
  17          sbit T_RST=P1^2;
  18          sbit ACC0=ACC^0;
  19          sbit ACC7=ACC^7;
  20          sbit LED=P1^4;                   //背光灯输出 (因本实验板无此功能 所以此项功能用P1.4LED灯作为指示)
  21          sbit system=P3^2;                //模式 对应实验板K1按键
  22          sbit TimerUp=P3^3;               //时间减 对应实验板K2按键
  23          sbit TimerDown=P3^4;     //时间加 对应实验板K3按键
  24          sbit BEEP=P3^6;       //蜂鸣器
  25          void   Set(uchar,uchar);      //根据选择调整相应项目
  26          void   RTInputByte(uchar);    //输入 1Byte */
  27          uchar  RTOutputByte(void);    //输出 1Byte */
  28          void   W1302(uchar, uchar);   //向DS1302写入一个字节
  29          uchar  R1302(uchar);          //从DS1302读出一个字节
  30          void   Set1302(uchar * );     //设置时间 
  31          void   KeySound();                        //按键音
  32          void   ClockSound();              //闹铃蜂鸣声
  33          uchar id,msec,model,LedTime,d;
  34          bit a,b;                          //闪烁标志位                        
  35          uchar inittime[7]={0x50,0x59,0x23,0x24,0x07,0x05,0x09}; //初始化后设置为：09年7月24日星期5 23点59分50秒
  36          void  Out_LCM(void);     //显示屏幕
  37          void  model0(void);                                                //显示输出
  38          void  model1(void);
  39          void  model2(void);
  40          void  model3(void);
  41          void  model4(void);
  42          void  model5(void);
  43          void  model6(void); 
  44          void  id_case1_key();   //项目调整
  45          void  Modset();          //模式键处理
  46          void  WriteDataLCM(uchar WDLCM);
  47          void  WriteCommandLCM(uchar WCLCM,BuysC);
  48          uchar ReadStatusLCM(void);
  49          void  LCMInit(void);
  50          void  OutputInformation(uchar X, uchar Y, uchar DData);
  51          void  DisplayListChar(uchar X, uchar Y, uchar code *DData);
  52          
  53          void  Delay5Ms(void);
  54          void  Delay400Ms(void);
  55          void  systemsetup(void);                 //进入系统设置
C51 COMPILER V8.18   DA1302                                                                12/15/2009 15:11:35 PAGE 2   

  56          uchar code systemp[]={"System.setup"};  //字符串输出(系统设定)
  57          uchar code TIMER[]={"Time"};            //字符串输出(时间)
  58          uchar code DATE[]={"Date"};                 //字符串输出(日期)
  59          uchar code alarmclock[]={"Clock"};      //字符串输出（闹铃）
  60          uchar code lamp[]={"Lamp"};                         //字符串输出（背光灯）
  61          uchar code reset[]={"Reset"};               //字符串输出（时间归零）
  62          uchar code exit[]={"Exit"};             //字符串输出（退出）
  63          uchar code set[]={"Set"};                               //字符串输出（设置）
  64          uchar code sec[]={"sec"};               //字符串输出（秒）
  65          uchar code ClockSet[]={"ClockSet"};             //字符串输出（闹铃设置）
  66          uchar code ClockOn[]={"ON"};                //字符串输出（ON）
  67          uchar code ClockOff[]={"OFF"};              //字符串输出（OFF）
  68          
  69          void  timesetup(void);                   //时间设置
  70          void  datesetup(void);                   //日期设置
  71          void  alarmclockset(void);               //闹铃设置
  72          void  lampsetup(void);                   //背光灯设置                                                                      
  73          void  timereset(void);                   //时间清零
  74          
  75          
  76          /*******************************************************************/
  77          void delay1(int ms)
  78          {
  79   1       unsigned char y ;
  80   1        while(ms--)
  81   1       {
  82   2        for(y = 0 ; y<250 ; y++)
  83   2        {
  84   3         _nop_() ;
  85   3         _nop_() ;
  86   3         _nop_() ;
  87   3         _nop_() ;
  88   3        }
  89   2       }
  90   1      }
  91          /* 延时子程序*/
  92          
  93          void  delay11(uchar x)
  94          { uchar j;
  95   1          while((x--)!=0)
  96   1          { for(j=0;j<125;j++)
  97   2               {;}
  98   2          }
  99   1      }
 100          //--------------------------------------------------
 101           //--------------------------------------------------
 102          void delay0(uchar x)    //x*0.14MS
 103          {
 104   1       unsigned char i;
 105   1        while(x--)
 106   1       {
 107   2        for (i = 0; i<13; i++) {}
 108   2       }
 109   1      }
 110          
 111          
 112          
 113          /*********************************************************/
 114          void beep()             //蜂鸣器响一声函数
 115          {
 116   1        unsigned char i;
 117   1        for (i=0;i<100;i++)
C51 COMPILER V8.18   DA1302                                                                12/15/2009 15:11:35 PAGE 3   

 118   1         {
 119   2         delay0(4);
 120   2         BEEP=!BEEP;       //BEEP取反
 121   2         } 
 122   1         BEEP=1;           //关闭蜂鸣器
 123   1         delay11(250);       //延时     
 124   1      }
 125          void main(void)
 126          {
 127   1        LED=0;        //打开LED ,低电平有效，外接9012驱动
 128   1        Delay400Ms(); //启动等待，等LCM讲入工作状态
 129   1        Delay400Ms();
 130   1        LCMInit();    //LCM初始化
 131   1        TMOD=0x01;    //16位定时
 132   1        TH0=0x3c;             //50ms
 133   1        TL0=0xb0;
 134   1        EA=1;
 135   1        TR0=1;
 136   1        ET0=1;  
 137   1         
 138   1        while(1)
 139   1        {
 140   2           if(TimerDown==0)         //左移键按下后把背光灯打开
 141   2            {Delay5Ms();
 142   3            if(TimerDown==0)
 143   3                 {KeySound();                   //蜂鸣声
 144   4                      LED=0;                            //打开背光灯
 145   4                  LedTime=R1302(0xc1)/16*10+R1302(0xc1)%16;} //取出背光灯时间并转换为十进制数         
 146   3             }
 147   2               b=1;                             //模式键是否动作标志。为1时不动作，为0时动作。
 148   2               Modset();                        //调用模式键处理程序判断按键是否按下。
 149   2               if(b==0)
 150   2                {
 151   3                 KeySound();                    //蜂鸣声
 152   3                 LED=0;                 //打开背光灯
 153   3                 systemsetup();         //进入系统设置模式
 154   3                 LedTime=R1302(0xc1)/16*10+R1302(0xc1)%16; //取出背光灯时间并转换为十进制数
 155   3                 }
 156   2               if((LED==0)&&LedTime==0)  //延时间是否到
 157   2                  LED=1;                 //关闭背光灯 
 158   2               if(R1302(0xc3)==1)        //闹铃是否打开，0xc3为读闹铃寄存器地址。
 159   2                 {if((R1302(0x85)==R1302(0xc5))&&(R1302(0x83)==R1302(0xc7))) //判断闹铃时间是否到，
 160   3                        ClockSound();            //发出闹铃蜂鸣声，无按键动作蜂鸣一分钟。
 161   3                      }          
 162   2               model0();                //输出显示屏幕
 163   2              }                                           
 164   1      }
 165          
 166          void KeySound()                         //按键音
 167          {
 168   1       beep();                                            //开蜂鸣声
 169   1       }
 170          void ClockSound()                       //闹铃蜂鸣声
 171          {
 172   1       if(a==0)
 173   1        {
 174   2         beep();
 175   2        }
 176   1      }
 177          
 178          void Modset()                   //模式键处理
 179          { if(system==0)               
C51 COMPILER V8.18   DA1302                                                                12/15/2009 15:11:35 PAGE 4   

 180   1         {
 181   2          Delay5Ms();
 182   2          if(system==0)
 183   2               {while(system==0);
 184   3                 KeySound();                    //蜂鸣声
 185   3                 a=0;msec=0;b=0;                //a、msec为闪烁标志，按键有动作时清零，不闪烁。
 186   3               }                                                //b为模式键确认动作。其它程判断b是否为零时来确定模式键是否动作。
 187   2         }
 188   1      }
 189          
 190          void systemsetup(void)              //系统设置
 191          { 
 192   1        model=1;
 193   1        while(model!=0)
 194   1        {     
 195   2        Out_LCM(); 
 196   2        if (TimerUp==0)             //设置项目左移
 197   2            {Delay5Ms();
 198   3             if(TimerUp==0)
 199   3                 {a=0;msec=0;KeySound();//蜂鸣声
 200   4                  if(model--==1)            //6种系统设置项目
 201   4                       model=6;
 202   4                      }   
 203   3             while(TimerUp==0);    
 204   3            }
 205   2         if (TimerDown==0)         //设置项目右移
 206   2            {
 207   3             Delay5Ms();
 208   3             if(TimerDown==0) 
 209   3                   {a=0;msec=0;KeySound();//蜂鸣声
 210   4                       if(model++==6)
 211   4                           model=1; 
 212   4                       }         
 213   3             while(TimerDown==0);    
 214   3            }
 215   2           b=1;                       //模式键是否动作标志。为1时不动作，为0时动作。
 216   2               Modset();              //调用模式键处理程序判断按键是否按下。
 217   2               if(b==0)
 218   2                 {KeySound();                    //蜂鸣声
 219   3                  switch(model)          //进入进个项目设置
 220   3                        {
 221   4                         case 1:
 222   4                              timesetup(); break;   //时间设置
 223   4                         case 2:
 224   4                              datesetup();break;    //日期设置
 225   4                         case 3:
 226   4                              alarmclockset();break;//闹铃设置
 227   4                         case 4:
 228   4                              lampsetup();break;        //背光灯设置
 229   4                     case 5:
 230   4                              timereset();break;    //时间清零
 231   4                         case 6:
 232   4                              model=0;break;        //退出系统设置
 233   4                        }
 234   3                }
 235   2         }
 236   1       }
 237          
 238                                                                    
 239          void timesetup()                //时间调整
 240          {
 241   1       id=6;
C51 COMPILER V8.18   DA1302                                                                12/15/2009 15:11:35 PAGE 5   

 242   1       while(model==1)                                //model为1时进入时间调整
 243   1        {
 244   2          b=1;
 245   2          Modset();
 246   2              if(b==0)
 247   2               {KeySound();                        //蜂鸣声
 248   3                if(id++==9)                       //6..9为时分秒调。                             .
 249   3                 id=6;
 250   3                }
 251   2         id_case1_key();                              //调用按键处理
 252   2         Out_LCM();                   //显示输出
 253   2       } 
 254   1      }
 255          void datesetup()                //对日期进行调整
 256          {
 257   1       id=1;
 258   1       while(model==2)                                //model为2时进入日期调整
 259   1        {b=1;
 260   2         Modset();                                    //模式键是否动作
 261   2         if(b==0)
 262   2          {KeySound();                            //蜂鸣声
 263   3               if(id++==5)                        //1..5为年月日星期 exit
 264   3                id=1;
 265   3               }
 266   2       id_case1_key();                        //日期调整
 267   2       Out_LCM();                     //显示输出
 268   2       } 
 269   1      }
 270          void alarmclockset(void)            //闹铃调整
 271          {id=12;
 272   1       while(model==3)                            //进入闹铃设置
 273   1        {b=1;
 274   2         Modset();                                //模式键是否动作
 275   2         if(b==0)                                       
 276   2          {KeySound();                            //蜂鸣声
 277   3               if(R1302(0xc3)%16==0)
 278   3                 {id=0;model++;}          //0xc2为闹铃开关寄存器。当为关时按下模式键时将退出闹铃设置，当开时进入闹铃时
             -间设置
 279   3              
 280   3               else if(id++==15)                  //12..15为闹铃开关和时间设置 exit
 281   3                    id=12;
 282   3          }
 283   2        id_case1_key();                       //调整
 284   2        Out_LCM();                    //显示输出
 285   2        }
 286   1      } 
 287             
 288          void lampsetup(void)            //背光灯时间设置
 289          {id=10;                                                 //背光灯存储空间DS1302(0xc0)
 290   1        while(model==4)                               //model为3时进入背光灯调整
 291   1        {b=1;
 292   2         Modset();                                    //模式键是否动作
 293   2         if(b==0)
 294   2          {KeySound();                            //蜂鸣声
 295   3               if(id++==11)                       //10为背光灯 exit
 296   3                id=10;
 297   3               }
 298   2       id_case1_key();                        
 299   2       Out_LCM();                     //显示输出                    
 300   2       }
 301   1      
 302   1      }
C51 COMPILER V8.18   DA1302                                                                12/15/2009 15:11:35 PAGE 6   

 303          void  timereset()               //时间清零
 304          {
 305   1        Set1302(inittime);                //清时间
 306   1        W1302(0x90,0xa5);             //打开充电二级管  一个二级管串联一个2K电阻
 307   1        model++; 
 308   1      }
 309          //对相应的项目进行加、减调整。
 310          void id_case1_key()                             //按键处理
 311          {
 312   1        if (TimerUp==0)        //增加
 313   1            {
 314   2             Delay5Ms();
 315   2             if(TimerUp==0)
 316   2                  {a=0;msec=0;KeySound();                     //蜂鸣声
 317   3                       if((id==9)||(id==5)||(id==11)||(id==15))       //当ID为9、5时按下加、减键将退出调整
 318   3                        { model++;                        //退出时间、日期设置
 319   4                          id=0;
 320   4                        }
 321   3                       else
 322   3                     Set(id,1);
 323   3                      }  
 324   2            while(TimerUp==0);    
 325   2           }
 326   1        if (TimerDown==0)  //减少
 327   1           {
 328   2             Delay5Ms();
 329   2             if(TimerDown==0) 
 330   2                  {a=0;msec=0;KeySound();                      //蜂鸣声
 331   3                       if((id==9)||(id==5)||(id==11)||(id==15))  //当ID为9、5时按下加、减键将退出调整
 332   3                        { model++;                         //退出时间、日期设置
 333   4                          id=0;
 334   4                        }
 335   3                 else
 336   3                         Set(id,0);             //调用DS1302写入函数
 337   3                 }          
 338   2            while(TimerDown==0);    
 339   2           }
 340   1      }
 341                           
 342          void timer_1(void) interrupt 1  //中断入口，闪烁
 343          {
 344   1        TH0=0x3c;            //50ms定时
 345   1        TL0=0xb0;
 346   1        if(msec++==10)           //500ms
 347   1         {msec=0;a=~a;       //闪烁标志反转 
 348   2              if(a==0)                   //1秒后背光时间减一秒。
 349   2               LedTime--;
 350   2         }  
 351   1      }
 352          
 353          //根据选择调整相应项目并写入DS1302
 354          void Set(uchar sel,uchar sel_1) 
 355          {
 356   1        uchar address,item;
 357   1        uchar max,min;
 358   1        if(sel==1)  {address=0x8c; max=99;min=0;}    //年
 359   1        if(sel==2)  {address=0x88; max=12;min=1;}    //月
 360   1        if(sel==3)  {address=0x86; max=31;min=1;}    //日
 361   1        if(sel==4)  {address=0x8a; max=7; min=1;}    //星期
 362   1        if(sel==6)  {address=0x84; max=23;min=0;}    //小时
 363   1        if(sel==7)  {address=0x82; max=59;min=0;}    //分钟
 364   1        if(sel==8)  {address=0x80; max=59;min=0;}    //秒
C51 COMPILER V8.18   DA1302                                                                12/15/2009 15:11:35 PAGE 7   

 365   1        if(sel==10) {address=0xc0; max=59;min=0;}    //背光时间，最长1分钟
 366   1        if(sel==12) {address=0xc2; max=1;min=0;}     //闹铃开关寄存器
 367   1        if(sel==13) {address=0xc4; max=23;min=0;}    //闹铃时寄存器
 368   1        if(sel==14) {address=0xc6; max=59;min=0;}    //闹铃分寄存器
 369   1      
 370   1      
 371   1        item=R1302(address+1)/16*10+R1302(address+1)%16;
 372   1        if (sel_1==0) item++;  else item--;
 373   1        if(item>max) item=min;   
 374   1        if(item<min) item=max;
 375   1                 
 376   1        W1302(0x8e,0x00);                   //允许写操作
 377   1        W1302(address,item/10*16+item%10);  //写入DS1302 //转成BCD码
 378   1        W1302(0x8e,0x80);                   //写保护，禁止写操作  
 379   1      }
 380          
 381          //屏幕显示
 382          void Out_LCM(void) 
 383          { switch(model)
 384   1         {
 385   2          case 0: model0(); break;
 386   2              case 1: model1(); break;
 387   2              case 2: model2(); break;                   //在不同的条件下显示不同的字符
 388   2              case 3: model3(); break;
 389   2              case 4: model4(); break;
 390   2              case 5: model5(); break;
 391   2              case 6: model6(); break;
 392   2         }       
 393   1      }
 394          
 395          /***********************model为零时第一行显示时间，不为零时显示system setup******/
 396          void model0()
 397            {                                                                                                                             
 398   1         DisplayListChar(0,0,TIMER);   //显示固定字符串（Time)                                                
 399   1         OutputInformation(13,0,0x20); //不显示
 400   1         OutputInformation(4,0,0x20);  //不显示
 401   1         OutputInformation(4,1,0x20);  //不显示
 402   1         OutputInformation(15,1,0x20); //不显示
 403   1         OutputInformation(7,1,0x2f);  //显示固定字符 "/"
 404   1         OutputInformation(10,1,0x2f); //显示固定字符 "/"
 405   1         OutputInformation(13,1,0x2f); //显示固定字符 "/"
 406   1         DisplayListChar(0,1,DATE);    //显示固定字符串Date(日期）         
 407   1         if(a==1)                                      //冒号闪烁
 408   1          {OutputInformation(7,0,0x3a); OutputInformation(10,0,0x3a);}
 409   1         else
 410   1          {OutputInformation(7,0,0x20); OutputInformation(10,0,0x20);}
 411   1      
 412   1       /*******************model为零时第二行显示日期，不为零显示设置项目*******/
 413   1       
 414   1              OutputInformation(5,1,R1302(0x8d)/16+0x30);  //显示年
 415   1          OutputInformation(6,1,R1302(0x8d)%16+0x30);
 416   1       
 417   1          OutputInformation(8,1,R1302(0x89)/16+0x30);  //显示月 
 418   1          OutputInformation(9,1,R1302(0x89)%16+0x30);    
 419   1            
 420   1          OutputInformation(11,1,R1302(0x87)/16+0x30); //显示日
 421   1          OutputInformation(12,1,R1302(0x87)%16+0x30);    
 422   1      
 423   1          OutputInformation(14,1,R1302(0x8b)%16+0x30); //显示星期
 424   1      
 425   1          OutputInformation(5,0,R1302(0x85)/16+0x30);  //显示小时
 426   1          OutputInformation(6,0,R1302(0x85)%16+0x30); 
C51 COMPILER V8.18   DA1302                                                                12/15/2009 15:11:35 PAGE 8   

 427   1                 
 428   1          OutputInformation(8,0,R1302(0x83)/16+0x30);  //显示分钟
 429   1          OutputInformation(9,0,R1302(0x83)%16+0x30); 
 430   1                 
 431   1          OutputInformation(11,0,R1302(0x81)/16+0x30); //显示秒
 432   1          OutputInformation(12,0,R1302(0x81)%16+0x30); 
 433   1      }
 434            
 435          /*************************model不为零时显示系统设置***********************************/
 436          
 437          
 438                   
 439                                                                    //model为1时time闪烁，按下模式键后进入时间调整
 440          void model1()
 441                   /*************************************判断ID的值来显示项目***********************/
 442          {        OutputInformation(0,0,0x20);          //不显示
 443   1           OutputInformation(1,0,0x20);
 444   1           DisplayListChar(2,0,systemp);         //第一行显示system setup
 445   1            if(id==0)                                                    //为0时显示TIME  date lalcak
 446   1                       {OutputInformation(9,1,0x20);     //不显示
 447   2                    OutputInformation(4,1,0x20);     //不显示
 448   2                        OutputInformation(15,1,0x20);    //不显示
 449   2                        DisplayListChar(5,1,DATE);       //显示date 
 450   2                        DisplayListChar(10,1,alarmclock);//显示lalcak
 451   2                                                                              
 452   2                        if(a==1)
 453   2                       {OutputInformation(0,1,0x20);     //不显示
 454   3                        OutputInformation(1,1,0x20);     //不显示
 455   3                            OutputInformation(2,1,0x20);     //不显示
 456   3                                OutputInformation(3,1,0x20);     //不显示
 457   3                           }
 458   2                    else                                                                                       
 459   2                      DisplayListChar(0,1,TIMER);       //显示time     
 460   2                       }
 461   1                else
 462   1                 {                                                                                         //id不为零进入时间调整项目
 463   2                         OutputInformation(3,1,0x3a);                  //显示固定字符 ":"
 464   2                 OutputInformation(6,1,0x3a);                  //显示固定字符 ":"
 465   2                 OutputInformation(9,1,0x20);                  //不显示
 466   2                         OutputInformation(10,1,0x20);                 //不显示
 467   2                         OutputInformation(0,1,0x20);                  //不显示
 468   2         /****************************时显示闪烁控制********************/
 469   2                         if((id==6)&&(a==1))                                           //id为5时时闪烁
 470   2                      {
 471   3                           OutputInformation(1,1,0x20); //不显示
 472   3                               OutputInformation(2,1,0x20); //不显示
 473   3                              }
 474   2                 else
 475   2                              {OutputInformation(1,1,R1302(0x85)/16+0x30); //显示时
 476   3                   OutputInformation(2,1,R1302(0x85)%16+0x30); 
 477   3                              }
 478   2        /******************************分显示闪烁控制********************/
 479   2                        if((id==7)&&(a==1))                                            //id为6时分闪烁
 480   2                      {
 481   3                           OutputInformation(4,1,0x20); //不显示
 482   3                               OutputInformation(5,1,0x20); //不显示
 483   3                              }
 484   2                        else
 485   2                               {OutputInformation(4,1,R1302(0x83)/16+0x30); //显示分
 486   3                    OutputInformation(5,1,R1302(0x83)%16+0x30); 
 487   3                               }
 488   2        /******************************秒显示闪烁控制********************/
C51 COMPILER V8.18   DA1302                                                                12/15/2009 15:11:35 PAGE 9   

 489   2                        if((id==8)&&(a==1))                                            //id为7时秒闪烁
 490   2                      {
 491   3                           OutputInformation(7,1,0x20); //不显示
 492   3                               OutputInformation(8,1,0x20); //不显示
 493   3                               }
 494   2                              else
 495   2                               {OutputInformation(7,1,R1302(0x81)/16+0x30); //显示秒
 496   3                    OutputInformation(8,1,R1302(0x81)%16+0x30); 
 497   3                               }
 498   2        /*******************************Exit显示闪烁控制********************/
 499   2      
 500   2                        if((id==9)&&(a==1))               //id为8时exit闪烁
 501   2                               {OutputInformation(11,1,0x20);     //不显示
 502   3                        OutputInformation(12,1,0x20);     //不显示
 503   3                            OutputInformation(13,1,0x20);     //不显示
 504   3                                OutputInformation(14,1,0x20);     //不显示
 505   3                           }
 506   2                        else
 507   2                            DisplayListChar(11,1,exit);       //显示exit
 508   2                      }
 509   1      }
 510          /***************************************modelo为2时date闪烁***********************************************
             -/
 511          void model2()
 512          {
 513   1                if(id==0)
 514   1                 {OutputInformation(9,1,0x20);        //不显示
 515   2                  OutputInformation(4,1,0x20);        //不显示
 516   2                      OutputInformation(15,1,0x20);       //不显示
 517   2                      DisplayListChar(0,1,TIMER);             //显示time    
 518   2                  DisplayListChar(10,1,alarmclock);   //显示clock
 519   2                  if(a==1)
 520   2                       {OutputInformation(5,1,0x20);     //不显示
 521   3                    OutputInformation(6,1,0x20);     //不显示
 522   3                        OutputInformation(7,1,0x20);     //不显示
 523   3                        OutputInformation(8,1,0x20);     //不显示
 524   3                       }
 525   2                       
 526   2                 else
 527   2                   DisplayListChar(5,1,DATE);         //显示date
 528   2                 }
 529   1      /*****************************************************************************************************/
 530   1                                                              //id不为零时、进入日期调整
 531   1      /*****************************************************************************************************/
 532   1                else                                                          
 533   1                 { OutputInformation(0,1,0x20);                  //不显示
 534   2                       OutputInformation(11,1,0x20);                 //不显示
 535   2                   OutputInformation(3,1,0x2f);                  //显示固定字符 "/"
 536   2               OutputInformation(6,1,0x2f);                  //显示固定字符 "/"
 537   2               OutputInformation(9,1,0x2f);                  //显示固定字符 "/"  
 538   2         /****************************年显示闪烁控制********************/
 539   2                       if((id==1)&&(a==1))                                               //id为1时年闪烁
 540   2                    {
 541   3                         OutputInformation(1,1,0x20);                //不显示
 542   3                         OutputInformation(2,1,0x20);                //不显示
 543   3                        }
 544   2                       else
 545   2                        {OutputInformation(1,1,R1302(0x8d)/16+0x30); //显示年
 546   3                 OutputInformation(2,1,R1302(0x8d)%16+0x30); 
 547   3                        }
 548   2         /***************************月闪烁控制************************/
 549   2                       if((id==2)&&(a==1))                                               //id为2时月闪烁
C51 COMPILER V8.18   DA1302                                                                12/15/2009 15:11:35 PAGE 10  

 550   2                    {
 551   3                         OutputInformation(4,1,0x20);                //不显示
 552   3                         OutputInformation(5,1,0x20);                //不显示
 553   3                        }
 554   2                       else
 555   2                        {OutputInformation(4,1,R1302(0x89)/16+0x30); //显示月
 556   3                 OutputInformation(5,1,R1302(0x89)%16+0x30); 
 557   3                        }
 558   2        /***************************日闪烁控制************************/
 559   2                       if((id==3)&&(a==1))                                               //id为2日闪烁
 560   2                    {
 561   3                         OutputInformation(7,1,0x20);                //不显示
 562   3                         OutputInformation(8,1,0x20);                //不显示
 563   3                        }
 564   2                       else
 565   2                        {OutputInformation(7,1,R1302(0x87)/16+0x30); //显示日
 566   3                 OutputInformation(8,1,R1302(0x87)%16+0x30); 
 567   3                        }
 568   2        /***************************星期闪烁控制*********************************/
 569   2                       if((id==4)&&(a==1))                                               //id为2时星期闪烁
 570   2                    {
 571   3                         OutputInformation(10,1,0x20);                //不显示
 572   3                        }
 573   2                       else
 574   2                        {OutputInformation(10,1,R1302(0x8b)%16+0x30); //显示星期
 575   3                        }
 576   2        /**************************exit闪烁控制*********************************/
 577   2                       if((id==5)&&(a==1))                                                //id为5时exit闪烁
 578   2                     { OutputInformation(12,1,0x20);     //不显示
 579   3                       OutputInformation(13,1,0x20);     //不显示
 580   3                           OutputInformation(14,1,0x20);     //不显示
 581   3                               OutputInformation(15,1,0x20);     //不显示
 582   3                           }
 583   2                       else
 584   2                         DisplayListChar(12,1,exit);                  //显示exit
 585   2                 }
 586   1      }
 587          /*********************************************************************************/
 588          
 589                                                                          /*model为3时进入闹铃项目
 590          
 591          /**********************************************************************************/
 592          void model3()
 593          {
 594   1            if(id==0) 
 595   1                 {OutputInformation(9,1,0x20);        //不显示
 596   2                  OutputInformation(4,1,0x20);        //不显示
 597   2                      OutputInformation(15,1,0x20);       //不显示
 598   2              DisplayListChar(0,1,TIMER);             //显示time 
 599   2                  DisplayListChar(5,1,DATE);          //显示date    
 600   2                  if(a==1)
 601   2                       { OutputInformation(10,1,0x20);     //不显示
 602   3                     OutputInformation(11,1,0x20);     //不显示
 603   3                         OutputInformation(12,1,0x20);     //不显示
 604   3                         OutputInformation(13,1,0x20);     //不显示
 605   3                         OutputInformation(14,1,0x20);
 606   3                       }
 607   2                  else
 608   2                   DisplayListChar(10,1,alarmclock);  //显示cloak
 609   2                 }
 610   1      
 611   1      /**************************id不为零进入闹铃设置显示********************/
C51 COMPILER V8.18   DA1302                                                                12/15/2009 15:11:35 PAGE 11  

 612   1               else
 613   1               {if(id==12)                                               //闹铃开关显示
 614   2                 {DisplayListChar(0,1,ClockSet);         //显示ClockSet
 615   3                      OutputInformation(8,1,0x20);
 616   3                      OutputInformation(13,1,0x20);
 617   3                      OutputInformation(14,1,0x20);
 618   3      /*****************************闹铃开关显示********************************/ 
 619   3                  if(a==1)                                                       //A为闪烁标志
 620   3                    {OutputInformation(10,1,0x20);     //不显示
 621   4                     OutputInformation(11,1,0x20);     //不显示
 622   4                         OutputInformation(12,1,0x20);     //不显示
 623   4                         OutputInformation(13,1,0x20);     //不显示
 624   4                        }     
 625   3                  else
 626   3                   {
 627   4                    if(R1302(0xc3)%16==0)            //闹铃寄存器的值是否为零（关）
 628   4                              {DisplayListChar(10,1,ClockOff);}//显示OFF
 629   4                        else
 630   4                          {OutputInformation(9,1,0x20);    //不显示
 631   5                               OutputInformation(12,1,0x20);   //不显示
 632   5                       OutputInformation(13,1,0x20);   //不显示
 633   5                           OutputInformation(14,1,0x20);   //不显示
 634   5                               OutputInformation(15,1,0x20);   //不显示
 635   5                               DisplayListChar(10,1,ClockOn);  //显示ON 
 636   5                              }
 637   4                       }
 638   3                 }
 639   2               else 
 640   2                 {DisplayListChar(0,1,alarmclock);   //显示clock
 641   3                  OutputInformation(8,1,0x3a);       //显示固定字符 ":"
 642   3                      OutputInformation(5,1,0x20);       //不显示
 643   3                      OutputInformation(11,1,0x20);      //不显示
 644   3      /**************************闹铃时闪烁显示**********************/                 
 645   3                  if((id==13)&&(a==1))                           //闹铃时闪烁
 646   3                        {
 647   4                         OutputInformation(6,1,0x20);
 648   4                         OutputInformation(7,1,0x20);
 649   4                        }
 650   3                      else
 651   3                        {OutputInformation(6,1,R1302(0xc5)/16+0x30); //显示闹铃时
 652   4                         OutputInformation(7,1,R1302(0xc5)%16+0x30); //显示闹铃时
 653   4                        }
 654   3      
 655   3      /**************************闹铃分闪烁显示*******************/
 656   3                      if((id==14)&&(a==1))               //闹铃分闪烁
 657   3                       {OutputInformation(9,1,0x20);     //不显示
 658   4                        OutputInformation(10,1,0x20);    //不显示
 659   4                        
 660   4                       }
 661   3                      else
 662   3                        {OutputInformation(9,1,R1302(0xc7)/16+0x30);  //显示闹铃分
 663   4                         OutputInformation(10,1,R1302(0xc7)%16+0x30); //显示闹铃分
 664   4                        }
 665   3      
 666   3      /************************exit闪烁显示***********************/
 667   3                      if((id==15)&&(a==1))                       //exie闪烁
 668   3                        {OutputInformation(12,1,0x20);   //不显示
 669   4                     OutputInformation(13,1,0x20);   //不显示
 670   4                         OutputInformation(14,1,0x20);   //不显示
 671   4                         OutputInformation(15,1,0x20);   //不显示
 672   4                        }
 673   3                      else
C51 COMPILER V8.18   DA1302                                                                12/15/2009 15:11:35 PAGE 12  

 674   3                        DisplayListChar(12,1,exit);      //显示exit                                                              
 675   3                 }
 676   2               }
 677   1      }
 678                                                                  
 679          /*********************************背光灯设置*****************************************/
 680          void model4()
 681          {
 682   1                if(id==0)                                                             //id为零未进入背光灯设置
 683   1                 {OutputInformation(10,1,0x20);       //不显示
 684   2                  OutputInformation(11,1,0x20);       //不显示
 685   2                  OutputInformation(4,1,0x20);        //不显示
 686   2                      DisplayListChar(5,1,reset);         //显示reset         
 687   2                      DisplayListChar(12,1,exit);         //显示exit
 688   2                      if(a==1)
 689   2                        {OutputInformation(0,1,0x20);     //不显示
 690   3                     OutputInformation(1,1,0x20);     //不显示
 691   3                         OutputInformation(2,1,0x20);     //不显示
 692   3                         OutputInformation(3,1,0x20);     //不显示
 693   3                         }
 694   2                      else
 695   2                DisplayListChar(0,1,lamp);        //显示lamp
 696   2                  }
 697   1               else                                                       //id不为零（10）进入背光灯时间设置
 698   1                 {DisplayListChar(0,1,lamp);          //显示lamp
 699   2                      DisplayListChar(4,1,set);           //显示set
 700   2                      DisplayListChar(9,1,sec);           //显示sec
 701   2                      DisplayListChar(12,1,exit);         //显示exit
 702   2                      if((id==10)&&(a==1))
 703   2                         {
 704   3                              OutputInformation(7,1,0x20);      //不显示               
 705   3                  OutputInformation(8,1,0x20);}
 706   2                      else
 707   2                        {
 708   3                         OutputInformation(7,1,R1302(0xc1)/16+0x30); //读出背光灯延时时间
 709   3                         OutputInformation(8,1,R1302(0xc1)%16+0x30);
 710   3                        }
 711   2                      if((id==11)&&(a==1))
 712   2                        {OutputInformation(12,1,0x20);     //不显示
 713   3                     OutputInformation(13,1,0x20);     //不显示
 714   3                         OutputInformation(14,1,0x20);     //不显示
 715   3                         OutputInformation(15,1,0x20);     //不显示
 716   3                        }
 717   2               }
 718   1      
 719   1      }
 720          /*********************************时间归零设置*****************************************/
 721          void model5()
 722          {       
 723   1              OutputInformation(4,1,0x20);        //不显示
 724   1                  OutputInformation(10,1,0x20);       //不显示
 725   1                      OutputInformation(11,1,0x20);       //不显示
 726   1                  DisplayListChar(0,1,lamp);          //显示lamp
 727   1                  DisplayListChar(12,1,exit);         //显示exit
 728   1                      if(a==1)
 729   1                       { OutputInformation(5,1,0x20);     //不显示
 730   2                     OutputInformation(6,1,0x20);     //不显示
 731   2                         OutputInformation(7,1,0x20);     //不显示
 732   2                         OutputInformation(8,1,0x20);     //不显示
 733   2                         OutputInformation(9,1,0x20);
 734   2                       }
 735   1                      else
C51 COMPILER V8.18   DA1302                                                                12/15/2009 15:11:35 PAGE 13  

 736   1                DisplayListChar(5,1,reset);       //显示reset   
 737   1      }
 738          /**********************************退出***********************************************/
 739          void model6()
 740          {
 741   1        OutputInformation(10,1,0x20);       //不显示
 742   1        OutputInformation(11,1,0x20);       //不显示
 743   1        DisplayListChar(0,1,lamp);          //显示lamp
 744   1        DisplayListChar(5,1,reset);         //显示reset
 745   1        if(a==1)
 746   1               {OutputInformation(12,1,0x20);   //不显示
 747   2                OutputInformation(13,1,0x20);   //不显示
 748   2                OutputInformation(14,1,0x20);   //不显示
 749   2                OutputInformation(15,1,0x20);   //不显示
 750   2               }
 751   1        else
 752   1           DisplayListChar(12,1,exit);      //显示exit
 753   1      }
 754          
 755                  
 756            
 757          //********* LCM1602驱动程序 ***************
 758          //写数据
 759          void WriteDataLCM(uchar WDLCM)
 760          {
 761   1      ReadStatusLCM(); //检测忙
 762   1      
 763   1      LCM_RS = 1;
 764   1      LCM_RW = 0;
 765   1      LCM_E = 0; 
 766   1      LCM_Data = WDLCM;
 767   1      delayNOP() ;
 768   1          LCM_E = 1 ;
 769   1          delayNOP() ;
 770   1       LCM_E = 0 ; 
 771   1      }
 772          //写指令
 773          void WriteCommandLCM(uchar WCLCM,BuysC)     //BuysC为0时忽略忙检测
 774           {
 775   1        if (BuysC) ReadStatusLCM(); //根据需要检测忙
 776   1       
 777   1        LCM_RS = 0;
 778   1        LCM_RW = 0; 
 779   1        LCM_E = 0;
 780   1       _nop_() ;
 781   1          _nop_() ; 
 782   1       LCM_Data = WCLCM;
 783   1      delayNOP() ;
 784   1        LCM_E = 1; 
 785   1      delayNOP() ;
 786   1       LCM_E = 0;
 787   1       }
 788          //读状态
 789          uchar ReadStatusLCM(void)
 790           {
 791   1       LCM_RS = 0 ;
 792   1          LCM_RW = 1 ;
 793   1          LCM_E = 1 ;
 794   1          delayNOP() ;
 795   1        LCM_E = 1;
 796   1        while (LCM_Data & Busy); //检测忙信号
 797   1       LCM_E =0;
C51 COMPILER V8.18   DA1302                                                                12/15/2009 15:11:35 PAGE 14  

 798   1        return(LCM_Data);
 799   1       }
 800          //LCM初始化
 801          void LCMInit(void) 
 802           {
 803   1      
 804   1       
 805   1      
 806   1      delay1(15) ;
 807   1      
 808   1      WriteCommandLCM(0x01,1);
 809   1        WriteCommandLCM(0x38,1);
 810   1          delay1(5) ;
 811   1        WriteCommandLCM(0x38,1);
 812   1        delay1(5) ;
 813   1        WriteCommandLCM(0x38,1);
 814   1        delay1(5) ;
 815   1        WriteCommandLCM(0x0c,1); //显示模式设置,开始要求每次检测忙信号
 816   1        delay1(5) ;
 817   1        WriteCommandLCM(0x06,1); // 显示光标移动设置
 818   1        
 819   1       }
 820          //按指定位置显示一个字符
 821          void OutputInformation(uchar X, uchar Y, uchar DData)
 822           {
 823   1        Y &= 0x1;
 824   1        X &= 0xF; //限制X不能大于15，Y不能大于1
 825   1        if (Y) X |= 0x40; //当要显示第二行时地址码+0x40;
 826   1        X |= 0x80; //算出指令码
 827   1        WriteCommandLCM(X, 0); //这里不检测忙信号，发送地址码
 828   1        WriteDataLCM(DData);
 829   1       }
 830          //按指定位置显示一串字符  ***原来的遇到空格0x20就不显示***
 831          void DisplayListChar(uchar X, uchar Y, uchar code *DData)
 832          {
 833   1        uchar ListLength,j;
 834   1        ListLength = strlen(DData);
 835   1        Y &= 0x1;
 836   1        X &= 0xF; //限制X不能大于15，Y不能大于1
 837   1            if (X <= 0xF) //X坐标应小于0xF
 838   1              { 
 839   2               for(j=0;j<ListLength;j++)
 840   2                  {
 841   3                   OutputInformation(X, Y, DData[j]); //显示单个字符
 842   3                   X++;
 843   3                  }
 844   2              }
 845   1      }
 846          //5ms延时
 847          void Delay5Ms(void)
 848           {
 849   1        unsigned int TempCyc = 5552;
 850   1        while(TempCyc--);
 851   1       }
 852          //400ms延时
 853          void Delay400Ms(void)
 854           {
 855   1        uchar TempCycA = 5;
 856   1        unsigned int TempCycB;
 857   1        while(TempCycA--)
 858   1        {
 859   2         TempCycB=7269;
C51 COMPILER V8.18   DA1302                                                                12/15/2009 15:11:35 PAGE 15  

 860   2         while(TempCycB--);
 861   2        }
 862   1       }
 863          
 864          //********DS1302读写程序***************//
 865          /******************************************************************** 
 866          函 数 名：RTInputByte()
 867          功    能：实时时钟写入一字节
 868          说    明：往DS1302写入1Byte数据 (内部函数)
 869          入口参数：d 写入的数据 
 870          返 回 值：无  
 871          ***********************************************************************/
 872          void RTInputByte(uchar d) 
 873          { 
 874   1          uchar i;
 875   1          ACC = d;
 876   1          for(i=8; i>0; i--)
 877   1          {
 878   2              T_IO = ACC0;           /*相当于汇编中的 RRC */
 879   2              T_CLK = 1;
 880   2              T_CLK = 0;
 881   2              ACC = ACC >> 1; 
 882   2          } 
 883   1      }
 884          /******************************************************************** 
 885          函 数 名：RTOutputByte()
 886          功    能：实时时钟读取一字节
 887          说    明：从DS1302读取1Byte数据 (内部函数)
 888          入口参数：无  
 889          返 回 值：ACC
 890          设    计：zhaojunjie           日    期：2002-03-19
 891          修    改：                     日    期： 
 892          ***********************************************************************/
 893          uchar RTOutputByte(void) 
 894          { 
 895   1          uchar i;
 896   1          for(i=8; i>0; i--)
 897   1          {
 898   2              ACC = ACC >>1;         /*相当于汇编中的 RRC */
 899   2              ACC7 = T_IO;
 900   2              T_CLK = 1;
 901   2              T_CLK = 0;
 902   2          } 
 903   1          return(ACC); 
 904   1      }
 905          /******************************************************************** 
 906          函 数 名：W1302()
 907          功    能：往DS1302写入数据
 908          说    明：先写地址，后写命令/数据 (内部函数)
 909          调    用：RTInputByte() , RTOutputByte()
 910          入口参数：ucAddr: DS1302地址, ucData: 要写的数据
 911          返 回 值：无
 912          ***********************************************************************/
 913          void W1302(uchar ucAddr, uchar ucDa)
 914          {
 915   1          T_RST = 0;
 916   1          T_CLK = 0;
 917   1          T_RST = 1;
 918   1          RTInputByte(ucAddr);       /* 地址，命令 */
 919   1          RTInputByte(ucDa);       /* 写1Byte数据*/
 920   1          T_CLK = 1;
 921   1          T_RST = 0;
C51 COMPILER V8.18   DA1302                                                                12/15/2009 15:11:35 PAGE 16  

 922   1      }
 923          /******************************************************************** 
 924          函 数 名：R1302()
 925          功    能：读取DS1302某地址的数据
 926          说    明：先写地址，后读命令/数据 (内部函数)
 927          调    用：RTInputByte() , RTOutputByte()
 928          入口参数：ucAddr: DS1302地址
 929          返 回 值：ucData :读取的数据
 930          ***********************************************************************/
 931          uchar R1302(uchar ucAddr)
 932          {
 933   1          uchar ucData;
 934   1          T_RST = 0;
 935   1          T_CLK = 0;
 936   1          T_RST = 1;
 937   1          RTInputByte(ucAddr);             /* 地址，命令 */
 938   1          ucData = RTOutputByte();         /* 读1Byte数据 */
 939   1          T_CLK = 1;
 940   1          T_RST = 0;
 941   1          return(ucData);
 942   1      }
 943          
 944          /******************************************************************** 
 945          函 数 名：Set1302()
 946          功    能：设置初始时间
 947          说    明：先写地址，后读命令/数据(寄存器多字节方式)
 948          调    用：W1302()
 949          入口参数：pClock: 设置时钟数据地址 格式为: 秒 分 时 日 月 星期 年
 950                                         7Byte (BCD码)1B 1B 1B 1B 1B  1B  1B
 951          返 回 值：无
 952          ***********************************************************************/
 953          void Set1302(uchar *pClock) 
 954          {
 955   1          uchar i;
 956   1          uchar ucAddr = 0x80; 
 957   1          W1302(0x8e,0x00);           /* 控制命令,WP=0,写操作*/
 958   1          for(i =7; i>0; i--)
 959   1          { 
 960   2              W1302(ucAddr,*pClock);  /* 秒 分 时 日 月 星期 年 */ 
 961   2              pClock++;
 962   2              ucAddr +=2;
 963   2          }
 964   1          W1302(0x8e,0x80);           /* 控制命令,WP=1,写保护*/
 965   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3498    ----
   CONSTANT SIZE    =     69    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
