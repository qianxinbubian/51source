C51 COMPILER V9.00   LCD                                                                   02/16/2011 10:41:06 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN lcd.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE lcd.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<at89x52.h>
   2          #include<lcd.h>
   3          
   4          /*---------------------------------------------------------------------
   5          ------------------ LCD初始化-----------------------------------------*/
   6          
   7          //LCD初始化程序;主要作用初始化LCD,对LCD进行复位以及设置;
   8          
   9          void initialization(void)                               //定义函数;
  10          {
  11   1        delay(50);                                                    //延时5MS;
  12   1        write_dictate(0x38,0);                                //写指令38H;不检测忙;
  13   1        delay(50);                                                    //延时5MS;
  14   1        write_dictate(0x38,0);                                //写指令38H;不检测忙;
  15   1        delay(50);                                                    //延时5MS;
  16   1        write_dictate(0x38,0);                                //写指令38H;不检测忙;
  17   1        delay(50);
  18   1        write_dictate(0x38,1);                                //显示模式设置;检测忙;
  19   1        write_dictate(0x08,1);                                //关闭显示;检测忙;
  20   1        write_dictate(0x01,1);                                //显示清屏;检测忙;
  21   1        write_dictate(0x06,1);                                //显示光标移动设置;检测忙;
  22   1        write_dictate(0x0C,1);                                //显示开及光标设置;检测忙;
  23   1      }
  24          
  25          /*---------------------------------------------------------------------
  26          ------------------ 写指令--------------------------------------------*/
  27          
  28          //写指令子程序;无返回值;输入二个变量I和J.
  29          //I为要写入LCD的指令;J为判断要不要检测忙.
  30          //如果J为0则不判断检测忙;
  31          //如果J为1则判断检测忙;
  32          
  33          void write_dictate(uchar i,j)                   //定义二个变量;
  34          {
  35   1        if(j)     read_estate();              //根据需要检测忙; 
  36   1        LCD_DATA=i;                           //把要写入的数据送到LCD数据端;
  37   1        LCD_RS=0;                                         //RS置0;
  38   1        LCD_RW=0;                                                             //RW置0;
  39   1        LCD_E =1;                                                             //E端置0;
  40   1        delay(10);                                                    //延时;
  41   1        LCD_E =0;                                                             //E端置1;以锁存数据;
  42   1      }
  43          
  44          /*------------------------------------------------------------------
  45          ------------------ 写数据------------------------------------------*/
  46          
  47          //写数据子程序;无返回值;输入变量I;
  48          //I为要写入LCD中的数据;
  49          //数据类型CHAR形;
  50          
  51          void write_data(uchar i)                                //定义输入变量值I;
  52          {                                                                               
  53   1        read_estate();                                                //检测忙信号;
  54   1        LCD_DATA=i;                                                   //把I中数据送到LCD数据端;
  55   1        LCD_RS=1;                                                             //RS置1;
C51 COMPILER V9.00   LCD                                                                   02/16/2011 10:41:06 PAGE 2   

  56   1        LCD_RW=0;                                                             //RW置0;
  57   1        LCD_E=0;                                                              //E置0;
  58   1        delay(10);                                                    //短延时;
  59   1        LCD_E=1;                                                              //E置1;以锁存数据;
  60   1      }
  61          
  62          /*----------------------------------------------------------------
  63          -------------------读状态----------------------------------------*/
  64          
  65          //读状态子程序;有返回值;返回值类型为CHAR型;
  66          //读回的状态通过RETURN返回;
  67          
  68          uchar read_estate(void)                                 //定义有返回值的函数;
  69          {
  70   1        LCD_DATA=0Xff;                                                //把LCD端口全置1方便读取信号;
  71   1        LCD_RS=0;                                                             //RS置0;
  72   1        LCD_RW=1;                                                             //RW置1;
  73   1        LCD_E=0;                                                          //E端置0;
  74   1        delay(10);                                                    //短延时;
  75   1        LCD_E=1;                                                              //E端置1;以锁存数据;
  76   1        while(LCD_DATA&0x80);                 //检测忙,则一直循环;
  77   1        return(LCD_DATA);                                             //返回读取的信号;
  78   1      }
  79          
  80          /*---------------------------------------------------------------
  81          -------------------读数据--------------------------------------*/
  82          
  83          //读数据子程序;有返回值,返回值类型为CHAR型;
  84          
  85          /*uchar read_data(void)                                 //定义有返回值的子函数;
  86          {
  87            LCD_DATA=0Xff;                                                //LCD数据端口置1;
  88            LCD_RS=1;                                                             //RS置1;
  89            LCD_RW=1;                                                             //RW置1;
  90            LCD_E=0;                                                              //E置0;
  91            delay(10);                                                    //短延时;
  92            LCD_E=1;                                                              //E置1;以锁存数据;
  93            return(LCD_DATA);                                             //返回读取的值;
  94          }
  95          
  96          
  97          /*---------------------------------------------------------------
  98          -------------------在指定位置显示一个字符----------------------*/
  99          void displayonechar(uchar x, y,ddata)
 100          {
 101   1      y &= 0x01;
 102   1      x &= 0x0f;                             //限制X不能大于15，Y不能大于1
 103   1      if (y) x+= 0x40;                      //当要显示第二行时地址码+0x40;
 104   1      x+= 0x80;                             //算出指令码
 105   1      write_dictate(x,0);                    //这里不检测忙信号，发送地址码
 106   1      write_data(ddata);
 107   1      }
 108          
 109          /*---------------------------------------------------------------
 110          -------------------在指定位置显示一串字符----------------------*/
 111          void displaylistchar(uchar x,y,uchar code *ddata)
 112          {
 113   1        uchar a=0;
 114   1        y&=0x01;
 115   1        x&=0xf;
 116   1        while(ddata[a]>0x20)
 117   1        {
C51 COMPILER V9.00   LCD                                                                   02/16/2011 10:41:06 PAGE 3   

 118   2          if(x<=0xff)
 119   2              {  
 120   3                displayonechar(x, y,ddata[a]);
 121   3                a++;
 122   3                x++;
 123   3              }
 124   2         }
 125   1      }
 126          
 127          /*---------------------------------------------------------------
 128          -------------------延时子程序----------------------------------*/
 129          void delay(uint a)
 130          {
 131   1        uint b;
 132   1        for(b=0;b<a;b++);
 133   1      }
 134          
 135          
 136          //400ms延时
 137          void delay400ms(void)
 138          {
 139   1        uchar a = 5;
 140   1        uint b;
 141   1        while(a--)
 142   1        {
 143   2          b=7269;
 144   2          while(b--);
 145   2        }
 146   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    301    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
