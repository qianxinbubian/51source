C51 COMPILER V8.02   EX81                                                                  07/23/2009 11:17:38 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE EX81
OBJECT MODULE PLACED IN ex81.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ex81.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          //用LCD显示字符'A'
   2          #include<reg52.h>    //包含单片机寄存器的头文件
   3          #include<intrins.h>  //包含_nop_()函数定义的头文件
   4          sbit RS=P2^0;    //寄存器选择位，将RS位定义为P2.0引脚
   5          sbit RW=P2^1;    //读写选择位，将RW位定义为P2.1引脚
   6          sbit E=P2^2;     //使能信号位，将E位定义为P2.2引脚
   7          sbit BF=P0^7;    //忙碌标志位，，将BF位定义为P0.7引脚
   8          /*****************************************************
   9          函数功能：延时1ms
  10          (3j+2)*i=(3×33+2)×10=1010(微秒)，可以认为是1毫秒
  11          ***************************************************/
  12          void delay1ms()
  13          {
  14   1         unsigned char i,j;   
  15   1               for(i=0;i<10;i++)
  16   1                for(j=0;j<33;j++)
  17   1                 ;             
  18   1       }
  19           /*****************************************************
  20          函数功能：延时若干毫秒
  21          入口参数：n
  22          ***************************************************/
  23           void delay(unsigned char n)
  24           {
  25   1         unsigned char i;
  26   1              for(i=0;i<n;i++)
  27   1                 delay1ms();
  28   1       }
  29          /*****************************************************
  30          函数功能：判断液晶模块的忙碌状态
  31          返回值：result。result=1，忙碌;result=0，不忙
  32          ***************************************************/
  33           unsigned char BusyTest(void)
  34            {
  35   1          bit result;
  36   1              RS=0;       //根据规定，RS为低电平，RW为高电平时，可以读状态
  37   1          RW=1;
  38   1          E=1;        //E=1，才允许读写
  39   1          _nop_();   //空操作
  40   1          _nop_();
  41   1          _nop_(); 
  42   1          _nop_();   //空操作四个机器周期，给硬件反应时间     
  43   1          result=BF;  //将忙碌标志电平赋给result
  44   1              E=0;
  45   1          return result;
  46   1        }
  47          /*****************************************************
  48          函数功能：将模式设置指令或显示地址写入液晶模块
  49          入口参数：dictate
  50          ***************************************************/
  51          void WriteInstruction (unsigned char dictate)
  52          {   
  53   1          while(BusyTest()==1); //如果忙就等待
  54   1               RS=0;                  //根据规定，RS和R/W同时为低电平时，可以写入指令
  55   1               RW=0;   
C51 COMPILER V8.02   EX81                                                                  07/23/2009 11:17:38 PAGE 2   

  56   1               E=0;                   //E置低电平(根据表8-6，写指令时，E为高脉冲，
  57   1                                   // 就是让E从0到1发生正跳变，所以应先置"0"
  58   1               _nop_();
  59   1               _nop_();             //空操作两个机器周期，给硬件反应时间
  60   1               P0=dictate;            //将数据送入P0口，即写入指令或地址
  61   1               _nop_();
  62   1               _nop_();
  63   1               _nop_();
  64   1               _nop_();               //空操作四个机器周期，给硬件反应时间
  65   1               E=1;                   //E置高电平
  66   1               _nop_();
  67   1               _nop_();
  68   1               _nop_();
  69   1               _nop_();               //空操作四个机器周期，给硬件反应时间
  70   1                E=0;                  //当E由高电平跳变成低电平时，液晶模块开始执行命令
  71   1       }
  72          /*****************************************************
  73          函数功能：指定字符显示的实际地址
  74          入口参数：x
  75          ***************************************************/
  76           void WriteAddress(unsigned char x)
  77           {
  78   1           WriteInstruction(x|0x80); //显示位置的确定方法规定为"80H+地址码x"
  79   1       }
  80          /*****************************************************
  81          函数功能：将数据(字符的标准ASCII码)写入液晶模块
  82          入口参数：y(为字符常量)
  83          ***************************************************/
  84           void WriteData(unsigned char y)
  85           {
  86   1          while(BusyTest()==1);  
  87   1                RS=1;           //RS为高电平，RW为低电平时，可以写入数据
  88   1                RW=0;
  89   1                E=0;            //E置低电平(根据表8-6，写指令时，E为高脉冲，
  90   1                             // 就是让E从0到1发生正跳变，所以应先置"0"
  91   1                P0=y;           //将数据送入P0口，即将数据写入液晶模块
  92   1                _nop_();
  93   1                _nop_();
  94   1                _nop_();
  95   1           _nop_();       //空操作四个机器周期，给硬件反应时间
  96   1                E=1;          //E置高电平
  97   1                _nop_();
  98   1                _nop_();
  99   1                _nop_();
 100   1               _nop_();        //空操作四个机器周期，给硬件反应时间
 101   1               E=0;            //当E由高电平跳变成低电平时，液晶模块开始执行命令
 102   1       }
 103          /*****************************************************
 104          函数功能：对LCD的显示模式进行初始化设置
 105          ***************************************************/
 106          void LcdInitiate(void)
 107          {
 108   1         delay(15);             //延时15ms，首次写指令时应给LCD一段较长的反应时间
 109   1         WriteInstruction(0x38);  //显示模式设置：16×2显示，5×7点阵，8位数据接口
 110   1              delay(5);   //延时5ms　
 111   1              WriteInstruction(0x38);
 112   1              delay(5);
 113   1              WriteInstruction(0x38);
 114   1              delay(5);
 115   1              WriteInstruction(0x0f);  //显示模式设置：显示开，有光标，光标闪烁
 116   1              delay(5);
 117   1              WriteInstruction(0x06);  //显示模式设置：光标右移，字符不移
C51 COMPILER V8.02   EX81                                                                  07/23/2009 11:17:38 PAGE 3   

 118   1              delay(5);
 119   1              WriteInstruction(0x01);  //清屏幕指令，将以前的显示内容清除
 120   1              delay(5);
 121   1       }
 122          void main(void)            //主函数
 123           {
 124   1        LcdInitiate();         //调用LCD初始化函数  
 125   1        WriteAddress(0x07);   //将显示地址指定为第1行第8列
 126   1        WriteData('A');       //将字符常量'A'写入液晶模块
 127   1              delay(5);
 128   1                              //字符的字形点阵读出和显示由液晶模块自动完成                           
 129   1      }
 130          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    193    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
