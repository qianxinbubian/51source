C51 COMPILER V8.02   I2C                                                                   05/25/2013 14:48:48 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN .\obj\i2c.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE i2c.c BROWSE DEBUG OBJECTEXTEND PRINT(.\obj\i2c.lst) OBJECT(.\obj\i2c.obj)

line level    source

   1          #include "i2c.h"
   2          #include "delay.h"
   3          
   4          #define  _Nop()  _nop_()  //定义空指令
   5                                   
   6          bit ack;                      //应答标志位
   7          
   8          sbit SDA=P3^5;
   9          sbit SCL=P3^4;
  10          
  11          /*------------------------------------------------
  12                              启动总线
  13          ------------------------------------------------*/
  14          void Start_I2c()
  15          {
  16   1        SDA=1;   //发送起始条件的数据信号
  17   1        _Nop();
  18   1        SCL=1;
  19   1        _Nop();    //起始条件建立时间大于4.7us,延时
  20   1        _Nop();
  21   1        _Nop();
  22   1        _Nop();
  23   1        _Nop();    
  24   1        SDA=0;     //发送起始信号
  25   1        _Nop();    //起始条件锁定时间大于4μ
  26   1        _Nop();
  27   1        _Nop();
  28   1        _Nop();
  29   1        _Nop();       
  30   1        SCL=0;    //钳住I2C总线，准备发送或接收数据
  31   1        _Nop();
  32   1        _Nop();
  33   1      }
  34          /*------------------------------------------------
  35                              结束总线
  36          ------------------------------------------------*/
  37          void Stop_I2c()
  38          {
  39   1        SDA=0;    //发送结束条件的数据信号
  40   1        _Nop();   //发送结束条件的时钟信号
  41   1        SCL=1;    //结束条件建立时间大于4μ
  42   1        _Nop();
  43   1        _Nop();
  44   1        _Nop();
  45   1        _Nop();
  46   1        _Nop();
  47   1        SDA=1;    //发送I2C总线结束信号
  48   1        _Nop();
  49   1        _Nop();
  50   1        _Nop();
  51   1        _Nop();
  52   1      }
  53          
  54          
  55          
C51 COMPILER V8.02   I2C                                                                   05/25/2013 14:48:48 PAGE 2   

  56          
  57          /*----------------------------------------------------------------
  58                           字节数据传送函数               
  59          函数原型: void  SendByte(unsigned char c);
  60          功能:  将数据c发送出去,可以是地址,也可以是数据,发完后等待应答,并对
  61               此状态位进行操作.(不应答或非应答都使ack=0 假)     
  62               发送数据正常，ack=1; ack=0表示被控器无应答或损坏。
  63          ------------------------------------------------------------------*/
  64          void  SendByte(unsigned char c)
  65          {
  66   1       unsigned char BitCnt;
  67   1       
  68   1       for(BitCnt=0;BitCnt<8;BitCnt++)  //要传送的数据长度为8位
  69   1          {
  70   2           if((c<<BitCnt)&0x80)SDA=1;   //判断发送位
  71   2             else  SDA=0;                
  72   2           _Nop();
  73   2           SCL=1;               //置时钟线为高，通知被控器开始接收数据位
  74   2            _Nop(); 
  75   2            _Nop();             //保证时钟高电平周期大于4μ
  76   2            _Nop();
  77   2            _Nop();
  78   2            _Nop();         
  79   2           SCL=0; 
  80   2          }
  81   1          
  82   1          _Nop();
  83   1          _Nop();
  84   1          SDA=1;               //8位发送完后释放数据线，准备接收应答位
  85   1          _Nop();
  86   1          _Nop();   
  87   1          SCL=1;
  88   1          _Nop();
  89   1          _Nop();
  90   1          _Nop();
  91   1          if(SDA==1)ack=0;     
  92   1             else ack=1;        //判断是否接收到应答信号
  93   1          SCL=0;
  94   1          _Nop();
  95   1          _Nop();
  96   1      }
  97          
  98          
  99          
 100          
 101          
 102          
 103          
 104          /*----------------------------------------------------------------
 105                           字节数据传送函数               
 106          函数原型: unsigned char  RcvByte();
 107          功能:  用来接收从器件传来的数据,并判断总线错误(不发应答信号)，
 108               发完后请用应答函数。  
 109          ------------------------------------------------------------------*/    
 110          unsigned char  RcvByte()
 111          {
 112   1        unsigned char retc;
 113   1        unsigned char BitCnt;
 114   1        
 115   1        retc=0; 
 116   1        SDA=1;             //置数据线为输入方式
 117   1        for(BitCnt=0;BitCnt<8;BitCnt++)
C51 COMPILER V8.02   I2C                                                                   05/25/2013 14:48:48 PAGE 3   

 118   1            {
 119   2              _Nop();           
 120   2              SCL=0;       //置时钟线为低，准备接收数据位
 121   2              _Nop();
 122   2              _Nop();      //时钟低电平周期大于4.7us
 123   2              _Nop();
 124   2              _Nop();
 125   2              _Nop();
 126   2              SCL=1;       //置时钟线为高使数据线上数据有效
 127   2              _Nop();
 128   2              _Nop();
 129   2              retc=retc<<1;
 130   2              if(SDA==1)retc=retc+1; //读数据位,接收的数据位放入retc中
 131   2              _Nop();
 132   2              _Nop(); 
 133   2            }
 134   1        SCL=0;    
 135   1        _Nop();
 136   1        _Nop();
 137   1        return(retc);
 138   1      }
 139          
 140          
 141          
 142          /*----------------------------------------------------------------
 143                               应答子函数
 144          原型:  void Ack_I2c(void);
 145           
 146          ----------------------------------------------------------------*/
 147          /*void Ack_I2c(void)
 148          {
 149            
 150            SDA=0;     
 151            _Nop();
 152            _Nop();
 153            _Nop();      
 154            SCL=1;
 155            _Nop();
 156            _Nop();              //时钟低电平周期大于4μ
 157            _Nop();
 158            _Nop();
 159            _Nop();  
 160            SCL=0;               //清时钟线，钳住I2C总线以便继续接收
 161            _Nop();
 162            _Nop();    
 163          }*/
 164          /*----------------------------------------------------------------
 165                               非应答子函数
 166          原型:  void NoAck_I2c(void);
 167           
 168          ----------------------------------------------------------------*/
 169          void NoAck_I2c(void)
 170          {
 171   1        
 172   1        SDA=1;
 173   1        _Nop();
 174   1        _Nop();
 175   1        _Nop();      
 176   1        SCL=1;
 177   1        _Nop();
 178   1        _Nop();              //时钟低电平周期大于4μ
 179   1        _Nop();
C51 COMPILER V8.02   I2C                                                                   05/25/2013 14:48:48 PAGE 4   

 180   1        _Nop();
 181   1        _Nop();  
 182   1        SCL=0;                //清时钟线，钳住I2C总线以便继续接收
 183   1        _Nop();
 184   1        _Nop();    
 185   1      }
 186          
 187          
 188          
 189          
 190          
 191          
 192          /*----------------------------------------------------------------
 193                              向无子地址器件发送字节数据函数               
 194          函数原型: bit  ISendByte(unsigned char sla,ucahr c);  
 195          功能:     从启动总线到发送地址，数据，结束总线的全过程,从器件地址sla.
 196                     如果返回1表示操作成功，否则操作有误。
 197          注意：    使用前必须已结束总线。
 198          ----------------------------------------------------------------*/
 199          /*bit ISendByte(unsigned char sla,unsigned char c)
 200          {
 201             Start_I2c();               //启动总线
 202             SendByte(sla);             //发送器件地址
 203               if(ack==0)return(0);
 204             SendByte(c);               //发送数据
 205               if(ack==0)return(0);
 206            Stop_I2c();                 //结束总线
 207            return(1);
 208          }
 209          */
 210          
 211          /*----------------------------------------------------------------
 212                              向有子地址器件发送多字节数据函数               
 213          函数原型: bit  ISendStr(unsigned char sla,unsigned char suba,ucahr *s,unsigned char no);  
 214          功能:     从启动总线到发送地址，子地址,数据，结束总线的全过程,从器件
 215                    地址sla，子地址suba，发送内容是s指向的内容，发送no个字节。
 216                     如果返回1表示操作成功，否则操作有误。
 217          注意：    使用前必须已结束总线。
 218          ----------------------------------------------------------------*/
 219          /*bit ISendStr(unsigned char sla,unsigned char suba,unsigned char *s,unsigned char no)
 220          {
 221             unsigned char i;
 222           for(i=0;i<no;i++)
 223              { 
 224             Start_I2c();               //启动总线
 225             SendByte(sla);             //发送器件地址
 226               if(ack==0)return(0);
 227             SendByte(suba);            //发送器件子地址
 228               if(ack==0)return(0); 
 229           
 230               SendByte(*s);            //发送数据
 231                 if(ack==0)return(0);
 232               Stop_I2c();                  //结束总线
 233                   DelayMs(1);               //必须延时等待芯片内部自动处理数据完毕
 234                   s++;
 235                   suba++;
 236              } 
 237            return(1);
 238          }
 239          */
 240          /*----------------------------------------------------------------
 241                              向无子地址器件读字节数据函数               
C51 COMPILER V8.02   I2C                                                                   05/25/2013 14:48:48 PAGE 5   

 242          函数原型: bit  IRcvByte(unsigned char sla,ucahr *c);  
 243          功能:     从启动总线到发送地址，读数据，结束总线的全过程,从器件地
 244                    址sla，返回值在c.
 245                     如果返回1表示操作成功，否则操作有误。
 246          注意：    使用前必须已结束总线。
 247          ----------------------------------------------------------------*/
 248          /*bit IRcvByte(unsigned char sla,unsigned char *c)
 249          {
 250             Start_I2c();                //启动总线
 251             SendByte(sla+1);            //发送器件地址
 252               if(ack==0)return(0);
 253             *c=RcvByte();               //读取数据
 254               NoAck_I2c();              //发送非就答位
 255               Stop_I2c();               //结束总线
 256            return(1);
 257          }
 258          
 259          */
 260          /*----------------------------------------------------------------
 261                              向有子地址器件读取多字节数据函数               
 262          函数原型: bit  ISendStr(unsigned char sla,unsigned char suba,ucahr *s,unsigned char no);  
 263          功能:     从启动总线到发送地址，子地址,读数据，结束总线的全过程,从器件
 264                    地址sla，子地址suba，读出的内容放入s指向的存储区，读no个字节。
 265                     如果返回1表示操作成功，否则操作有误。
 266          注意：    使用前必须已结束总线。
 267          ----------------------------------------------------------------*/
 268          /*bit IRcvStr(unsigned char sla,unsigned char suba,unsigned char *s,unsigned char no)
 269          {
 270             unsigned char i;
 271          
 272             Start_I2c();               //启动总线
 273             SendByte(sla);             //发送器件地址
 274               if(ack==0)return(0);
 275             SendByte(suba);            //发送器件子地址
 276               if(ack==0)return(0);
 277          
 278             Start_I2c();
 279             SendByte(sla+1);
 280                if(ack==0)return(0);
 281          
 282            for(i=0;i<no-1;i++)
 283              { 
 284               *s=RcvByte();              //发送数据
 285                Ack_I2c();                //发送就答位 
 286               s++;
 287              } 
 288             *s=RcvByte();
 289              NoAck_I2c();                 //发送非应位
 290              Stop_I2c();                    //结束总线
 291            return(1);
 292          }
 293          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    152    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
C51 COMPILER V8.02   I2C                                                                   05/25/2013 14:48:48 PAGE 6   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
