C51 COMPILER V8.02   PCF8591_DA_LCD1602_C51                                                05/18/2013 13:51:58 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE PCF8591_DA_LCD1602_C51
OBJECT MODULE PLACED IN PCF8591-DA-LCD1602-C51.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE PCF8591-DA-LCD1602-C51.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          #include <intrins.h>
   3          #include <string.h>
   4          
   5          #define uchar unsigned char
   6          #define uint  unsigned int
   7          #define disdata  P0              //显示数据码输出口
   8          bit flag;
   9          sbit SCL=P3^4;                   // 将p1.0口模拟时钟口
  10          sbit SDA=P3^5;                   // 将p1.3口模拟数据口
  11          
  12          
  13          sbit LCD_RS = P2^0;
  14          sbit LCD_RW = P2^1;
  15          sbit LCD_EN = P2^2;
  16          
  17          sbit  K1   = P1^4;       
  18          sbit  K2   = P1^5;       //选择健
  19          sbit  K3   = P1^6;       //启动健
  20          sbit  K4   = P1^7;       //停止健
  21          sbit  BEEP = P3^6;       //蜂鸣器
  22          
  23          uchar code dis1[] = {"    PCF-8591    "};
  24          uchar code dis2[] = {"  DA CONVERTER  "};
  25          
  26          uchar code dis3[] = {" K2: D/A CHOOSE "};
  27          uchar code dis4[] = {"K3:ENTER K4:EXIT"};
  28          
  29          uchar code dis5[] = {"   SINE  WAVE   "};
  30          uchar code dis6[] = {"  SQUARE  WAVE  "};
  31          uchar code dis7[] = {" TRIANGLE  WAVE "};
  32          uchar code dis8[] = {" SAWTOOTH  WAVE "};
  33          
  34          bit  out1=0,out2=0,out3=0,out4=0,START=0;
  35          
  36          #define delayNOP(); {_nop_();_nop_();_nop_();_nop_();};
  37          
  38          bit   bdata SystemError;                //从机错误标志位
  39          
  40          uchar N=0x00,k_count;
  41          /*********************** PCF8591专用变量定义 ***********************/
  42          
  43          #define PCF8591_WRITE   0x90
  44          #define PCF8591_READ    0x91
  45          #define  NUM  4                     //接收和发送缓存区的深度
  46          uchar idata receivebuf[NUM];    //数据接收缓冲区
  47          
  48          uchar  code  sin_tab[] =        //正弦波输出表
  49          {
  50               0x80,0x83,0x86,0x89,0x8D,0x90,0x93,0x96,0x99,0x9C,0x9F,0xA2,0xA5,0xA8,0xAB,0xAE,
  51               0xB1,0xB4,0xB7,0xBA,0xBC,0xBF,0xC2,0xC5,0xC7,0xCA,0xCC,0xCF,0xD1,0xD4,0xD6,0xD8,
  52               0xDA,0xDD,0xDF,0xE1,0xE3,0xE5,0xE7,0xE9,0xEA,0xEC,0xEE,0xEF,0xF1,0xF2,0xF4,0xF5,
  53               0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFD,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
  54               0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFD,0xFD,0xFC,0xFB,0xFA,0xF9,0xF8,0xF7,0xF6,
  55               0xF5,0xF4,0xF2,0xF1,0xEF,0xEE,0xEC,0xEA,0xE9,0xE7,0xE5,0xE3,0xE1,0xDF,0xDD,0xDA,
C51 COMPILER V8.02   PCF8591_DA_LCD1602_C51                                                05/18/2013 13:51:58 PAGE 2   

  56               0xD8,0xD6,0xD4,0xD1,0xCF,0xCC,0xCA,0xC7,0xC5,0xC2,0xBF,0xBC,0xBA,0xB7,0xB4,0xB1,
  57               0xAE,0xAB,0xA8,0xA5,0xA2,0x9F,0x9C,0x99,0x96,0x93,0x90,0x8D,0x89,0x86,0x83,0x80,
  58               0x80,0x7C,0x79,0x76,0x72,0x6F,0x6C,0x69,0x66,0x63,0x60,0x5D,0x5A,0x57,0x55,0x51,
  59               0x4E,0x4C,0x48,0x45,0x43,0x40,0x3D,0x3A,0x38,0x35,0x33,0x30,0x2E,0x2B,0x29,0x27,
  60               0x25,0x22,0x20,0x1E,0x1C,0x1A,0x18,0x16,0x15,0x13,0x11,0x10,0x0E,0x0D,0x0B,0x0A,
  61               0x09,0x08,0x07,0x06,0x05,0x04,0x03,0x02,0x02,0x01,0x00,0x00,0x00,0x00,0x00,0x00,
  62               0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x02,0x02,0x03,0x04,0x05,0x06,0x07,0x08,0x09,
  63               0x0A,0x0B,0x0D,0x0E,0x10,0x11,0x13,0x15,0x16,0x18,0x1A,0x1C,0x1E,0x20,0x22,0x25,
  64               0x27,0x29,0x2B,0x2E,0x30,0x33,0x35,0x38,0x3A,0x3D,0x40,0x43,0x45,0x48,0x4C,0x4E,
  65               0x51,0x55,0x57,0x5A,0x5D,0x60,0x63,0x66,0x69,0x6C,0x6F,0x72,0x76,0x79,0x7C,0x7E
  66          };
  67          
  68          /*******************************************************************/
  69          /*                                                                 */
  70          /*  延时函数                                                       */
  71          /*                                                                 */
  72          /*******************************************************************/
  73          void delayB(uchar x)    //x*0.14MS
  74           {
  75   1         uchar i;
  76   1         while(x--)
  77   1         {
  78   2           for (i=0; i<13; i++)
  79   2           { }
  80   2         }
  81   1       }
  82          
  83          /*******************************************************************/
  84          /*                                                                 */
  85          /*  延时函数                                                       */
  86          /*                                                                 */
  87          /*******************************************************************/
  88          void delay(int ms)
  89          {
  90   1          while(ms--)
  91   1              {
  92   2            uchar i;
  93   2                for(i=0;i<250;i++)
  94   2                 {
  95   3                  _nop_();
  96   3                  _nop_();
  97   3                  _nop_();
  98   3                  _nop_();
  99   3                 }
 100   2              }
 101   1      }
 102          
 103          /*******************************************************************/
 104          /*                                                                 */
 105          /*  蜂鸣器函数                                                     */
 106          /*                                                                 */
 107          /*******************************************************************/
 108          void beep()
 109           {
 110   1         uchar j;
 111   1         for (j=0;j<180;j++)
 112   1          { 
 113   2           delayB(5);
 114   2           BEEP=!BEEP;                 //BEEP取反
 115   2          } 
 116   1           BEEP=1;                    //关闭蜂鸣器
 117   1               delay(100);
C51 COMPILER V8.02   PCF8591_DA_LCD1602_C51                                                05/18/2013 13:51:58 PAGE 3   

 118   1       }
 119          
 120          
 121          /*******************************************************************/
 122          /*                                                                 */
 123          /*检查LCD忙状态                                                    */
 124          /*lcd_busy为1时，忙，等待。lcd-busy为0时,闲，可写指令与数据。      */
 125          /*                                                                 */
 126          /*******************************************************************/
 127          
 128          bit lcd_busy()
 129           {
 130   1          bit result;
 131   1          LCD_RS = 0;
 132   1          LCD_RW = 1;
 133   1          LCD_EN = 1;
 134   1          delayNOP();
 135   1          result = (bit)(P0&0x80);
 136   1          LCD_EN = 0;
 137   1          return(result);
 138   1       }
 139          
 140          /*******************************************************************/
 141          /*                                                                 */
 142          /*写指令数据到LCD                                                  */
 143          /*RS=L，RW=L，E=高脉冲，D0-D7=指令码。                             */
 144          /*                                                                 */
 145          /*******************************************************************/
 146          
 147          void lcd_wcmd(uchar cmd)
 148          
 149          {
 150   1         while(lcd_busy());
 151   1          LCD_RS = 0;
 152   1          LCD_RW = 0;
 153   1          LCD_EN = 0;
 154   1          _nop_();
 155   1          _nop_();
 156   1          P0 = cmd;
 157   1          delayNOP();
 158   1          LCD_EN = 1;
 159   1          delayNOP();
 160   1          LCD_EN = 0;
 161   1      }
 162          
 163          /*******************************************************************/
 164          /*                                                                 */
 165          /*写显示数据到LCD                                                  */
 166          /*RS=H，RW=L，E=高脉冲，D0-D7=数据。                               */
 167          /*                                                                 */
 168          /*******************************************************************/
 169          
 170          void lcd_wdat(uchar dat)
 171          {
 172   1         while(lcd_busy());
 173   1          LCD_RS = 1;
 174   1          LCD_RW = 0;
 175   1          LCD_EN = 0;
 176   1          P0 = dat;
 177   1          delayNOP();
 178   1          LCD_EN = 1;
 179   1          delayNOP();
C51 COMPILER V8.02   PCF8591_DA_LCD1602_C51                                                05/18/2013 13:51:58 PAGE 4   

 180   1          LCD_EN = 0;
 181   1      }
 182          
 183          /*******************************************************************/
 184          /*                                                                 */
 185          /*  LCD初始化设定                                                  */
 186          /*                                                                 */
 187          /*******************************************************************/
 188          
 189          void lcd_init()
 190          {
 191   1          delay(15);
 192   1          lcd_wcmd(0x38);      //16*2显示，5*7点阵，8位数据
 193   1          delay(5);
 194   1          lcd_wcmd(0x38);
 195   1          delay(5);
 196   1          lcd_wcmd(0x38);
 197   1          delay(5);
 198   1      
 199   1          lcd_wcmd(0x0c);      //显示开，关光标
 200   1          delay(5);
 201   1          lcd_wcmd(0x06);      //移动光标
 202   1          delay(5);
 203   1          lcd_wcmd(0x01);      //清除LCD的显示内容
 204   1          delay(5);
 205   1      }
 206          
 207          /*******************************************************************/
 208          /*                                                                 */
 209          /*  设定显示位置                                                   */
 210          /*                                                                 */
 211          /*******************************************************************/
 212          
 213          void lcd_pos(uchar pos)
 214          {
 215   1        lcd_wcmd(pos | 0x80);  //数据指针=80+地址变量
 216   1      }
 217          
 218          //-------------------------------------------------------------------
 219          // 函数名称： iic_start()
 220          // 函数功能： 启动I2C总线子程序
 221          //-------------------------------------------------------------------
 222          void iic_start(void)
 223          { //时钟保持高，数据线从高到低一次跳变，I2C通信开始
 224   1              SDA = 1;
 225   1              SCL = 1;
 226   1              delayNOP();      // 延时5us
 227   1              SDA = 0;
 228   1              delayNOP();
 229   1          SCL = 0;
 230   1      }
 231          //-------------------------------------------------------------------
 232          // 函数名称： iic_stop()
 233          // 函数功能： 停止I2C总线数据传送子程序
 234          //-------------------------------------------------------------------
 235          void iic_stop(void)
 236          {
 237   1              SDA = 0;           //时钟保持高，数据线从低到高一次跳变，I2C通信停止
 238   1              SCL = 1;
 239   1              delayNOP();
 240   1              SDA = 1;
 241   1              delayNOP();
C51 COMPILER V8.02   PCF8591_DA_LCD1602_C51                                                05/18/2013 13:51:58 PAGE 5   

 242   1          SCL = 0;
 243   1      }
 244          //------------------------------------------------------------------
 245          // 函数名称： iicInit_()
 246          // 函数功能： 初始化I2C总线子程序
 247          //------------------------------------------------------------------
 248           void iicInit(void)
 249             {
 250   1         SCL = 0;
 251   1         iic_stop();
 252   1         }
 253          //-------------------------------------------------------------------
 254          // 函数名称： slave_ACK
 255          // 函数功能： 从机发送应答位子程序
 256          //-------------------------------------------------------------------
 257          void slave_ACK(void)
 258          {
 259   1              SDA = 0;
 260   1              SCL = 1;
 261   1              delayNOP();
 262   1              SCL = 0;
 263   1      }
 264          //-------------------------------------------------------------------
 265          // 函数名称： slave_NOACK
 266          // 函数功能： 从机发送非应答位子程序，迫使数据传输过程结束
 267          //-------------------------------------------------------------------
 268          void slave_NOACK(void)
 269          {
 270   1              SDA = 1;
 271   1              SCL = 1;
 272   1              delayNOP();
 273   1              SDA = 0;
 274   1          SCL = 0;
 275   1      }
 276          //-------------------------------------------------------------------
 277          // 函数名称： check_ACK
 278          // 函数功能： 主机应答位检查子程序，迫使数据传输过程结束
 279          //-------------------------------------------------------------------
 280          void check_ACK(void)
 281          {
 282   1          SDA = 1;        // 将p1.1设置成输入，必须先向端口写1
 283   1              SCL = 1;
 284   1              flag = 0;
 285   1              delayNOP();
 286   1              if(SDA == 1)    // 若SDA=1表明非应答，置位非应答标志flag
 287   1          flag = 1;
 288   1              SCL = 0;
 289   1      }
 290          //-------------------------------------------------------------------
 291          // 函数名称： IICSendByte
 292          // 入口参数： ch
 293          // 函数功能： 发送一个字节
 294          //-------------------------------------------------------------------
 295          void IICSendByte(uchar ch)
 296          
 297          {
 298   1              unsigned char idata n=8;     // 向SDA上发送一位数据字节，共八位
 299   1      
 300   1              while(n--)
 301   1              {
 302   2              if((ch&0x80) == 0x80)    // 若要发送的数据最高位为1则发送位1
 303   2                 {
C51 COMPILER V8.02   PCF8591_DA_LCD1602_C51                                                05/18/2013 13:51:58 PAGE 6   

 304   3                              SDA = 1;    // 传送位1
 305   3                              SCL = 1;
 306   3                          delayNOP();
 307   3                      //      SDA = 0;
 308   3                              SCL = 0;
 309   3                 }
 310   2                      else
 311   2                      {
 312   3                              SDA = 0;    // 否则传送位0
 313   3                              SCL = 1;
 314   3                              delayNOP();
 315   3                              SCL = 0;
 316   3                      }
 317   2                      ch = ch<<1;    // 数据左移一位
 318   2              }
 319   1      }
 320          //-------------------------------------------------------------------
 321          // 函数名称： IICreceiveByte
 322          // 返回接收的数据
 323          // 函数功能： 接收一字节子程序
 324          //-------------------------------------------------------------------
 325          uchar IICreceiveByte(void)
 326          {
 327   1              uchar idata n=8;     // 从SDA线上读取一上数据字节，共八位
 328   1              uchar tdata=0;
 329   1              while(n--)
 330   1              {
 331   2                 SDA = 1;
 332   2                 SCL = 1;
 333   2                 tdata =tdata<<1;                 //左移一位
 334   2                      if(SDA == 1)
 335   2                        tdata = tdata|0x01;   // 若接收到的位为1，则数据的最后一位置1
 336   2                      else
 337   2                        tdata = tdata&0xfe;   // 否则数据的最后一位置0
 338   2                 SCL = 0;
 339   2               }
 340   1      
 341   1               return(tdata);
 342   1      }
 343          //-------------------------------------------------------------------
 344          // 函数名称： DAC_PCF8591
 345          // 入口参数： slave_add从机地址,n要发送的数据个数
 346          // 函数功能： 发送n位数据子程序
 347          //-------------------------------------------------------------------
 348          void DAC_PCF8591(uchar controlbyte)
 349          {
 350   1      
 351   1              iic_start();                    // 启动I2C
 352   1              delayNOP();
 353   1      
 354   1              IICSendByte(PCF8591_WRITE);     // 发送地址位
 355   1              check_ACK();                    // 检查应答位
 356   1          if(flag == 1)
 357   1               {
 358   2                      SystemError = 1;
 359   2                      return;                     // 若非应答，置错误标志位
 360   2           }
 361   1          IICSendByte(controlbyte&0x77);      //Control byte
 362   1              check_ACK();                    //检查应答位
 363   1          if(flag == 1)
 364   1               {
 365   2                      SystemError = 1;
C51 COMPILER V8.02   PCF8591_DA_LCD1602_C51                                                05/18/2013 13:51:58 PAGE 7   

 366   2                      return;                    // 若非应答，置错误标志位
 367   2               }
 368   1      }
 369          
 370          //-------------------------------------------------------------------
 371          // 函数名称： ADC_PCF8591
 372          // 入口参数： controlbyte控制字
 373          // 函数功能： 连续读入4路通道的A/D转换结果到receivebuf
 374          //-------------------------------------------------------------------
 375          /*
 376          void ADC_PCF8591(uchar controlbyte)
 377          {
 378              uchar idata i; //,receive_da;
 379          
 380                  iic_start();
 381          
 382                  IICSendByte(PCF8591_WRITE);     //控制字
 383                  check_ACK();
 384                  if(flag == 1)
 385                  {
 386                          SystemError = 1;
 387                          return;
 388                  }
 389          
 390                  IICSendByte(controlbyte);       //控制字
 391                  check_ACK();
 392                  if(flag == 1)
 393                  {
 394                          SystemError = 1;
 395                          return;
 396                  }
 397          
 398              iic_start();                //重新发送开始命令
 399                  IICSendByte(PCF8591_READ);      //控制字
 400                  check_ACK();
 401                  if(flag == 1)
 402                  {
 403                          SystemError = 1;
 404                          return;
 405                  }
 406          
 407              IICreceiveByte();   //空读一次，调整读顺序
 408              slave_ACK();        //收到一个字节后发送一个应答位
 409          
 410          //      while(i<4)
 411                  for(i=0;i<4;i++)
 412                  {
 413                  //  receive_da=IICreceiveByte();
 414                  //  receivebuf[i]=receive_da;
 415                receivebuf[i] = IICreceiveByte();
 416                    slave_ACK();       //收到一个字节后发送一个应答位
 417                  }
 418                  slave_NOACK();       //收到最后一个字节后发送一个非应答位
 419                  iic_stop();
 420          }*/
 421          
 422          /*********************************************************
 423            输出三角波
 424          *********************************************************/
 425          void  Triangle()
 426          {
 427   1          uchar l;
C51 COMPILER V8.02   PCF8591_DA_LCD1602_C51                                                05/18/2013 13:51:58 PAGE 8   

 428   1          for(l=0;l<255;l++)
 429   1               { 
 430   2                 IICSendByte(l);             //data byte
 431   2                 check_ACK();            //检查应答位
 432   2             if(flag == 1)
 433   2                 {
 434   3                      SystemError = 1;
 435   3              return;               //置错误标志位SystemError
 436   3                 }
 437   2               }
 438   1      
 439   1            for(l=255;l>1;l--)
 440   1               { 
 441   2                 IICSendByte(l);             //data byte
 442   2                 check_ACK();            //检查应答位
 443   2             if(flag == 1)
 444   2                 {
 445   3                      SystemError = 1;
 446   3              return;               //置错误标志位SystemError
 447   3                 }
 448   2               }
 449   1      }
 450          
 451          /*********************************************************
 452            输出方波函数
 453          *********************************************************/
 454          void  Square()
 455          {
 456   1           IICSendByte(N);         //data byte
 457   1               check_ACK();            //检查应答位
 458   1           if(flag == 1)
 459   1               {
 460   2                 SystemError = 1;
 461   2             return;               //置错误标志位SystemError
 462   2               }
 463   1            delay(15);
 464   1                N=~N;
 465   1      }
 466          
 467          /*********************************************************
 468            输出正弦波函数
 469          *********************************************************/
 470          void  sin()
 471          {
 472   1        uint i;
 473   1        for(i=0; i<256; i++)
 474   1        {
 475   2          IICSendByte(sin_tab[i]);      //data byte
 476   2              check_ACK();                  //检查应答位
 477   2          if(flag == 1)
 478   2               {
 479   3                 SystemError = 1;
 480   3             return;                    //置错误标志位SystemError
 481   3               }
 482   2        }
 483   1      
 484   1      }
 485          
 486          /*********************************************************
 487            输出锯齿波函数
 488          *********************************************************/
 489          void  Sawtooth()
C51 COMPILER V8.02   PCF8591_DA_LCD1602_C51                                                05/18/2013 13:51:58 PAGE 9   

 490          {
 491   1        uchar l;
 492   1          for(l=0;l<255;l++)
 493   1               { 
 494   2                 IICSendByte(l);             //data byte
 495   2                 check_ACK();            //检查应答位
 496   2             if(flag == 1)
 497   2                 {
 498   3                      SystemError = 1;
 499   3              return;                //置错误标志位SystemError
 500   3                 }
 501   2               }
 502   1      }
 503          
 504          /*********************************************************
 505            功能健函数
 506          *********************************************************/
 507          void  keyscan()
 508          {
 509   1         uchar m;
 510   1         if((K2==0)&(!START))       //启动输出后，屏蔽K2健
 511   1         {
 512   2           k_count++;
 513   2           beep();   
 514   2           switch (k_count)
 515   2           {
 516   3              case 1: 
 517   3              lcd_pos(0x00);
 518   3                  for(m=0;m<16;m++)
 519   3              lcd_wdat(dis2[m]);
 520   3           
 521   3              lcd_pos(0x40);
 522   3                  for(m=0;m<16;m++)
 523   3              lcd_wdat(dis5[m]);
 524   3              out1=1;
 525   3                      out4=0;
 526   3              break;
 527   3        
 528   3              case 2: 
 529   3              lcd_pos(0x40);
 530   3                  for(m=0;m<16;m++)
 531   3              lcd_wdat(dis6[m]); 
 532   3              out1=0;
 533   3                      out2=1;
 534   3              break;
 535   3            
 536   3                      case 3: 
 537   3              lcd_pos(0x40);
 538   3                  for(m=0;m<16;m++)
 539   3              lcd_wdat(dis7[m]);
 540   3                      out2=0;
 541   3                      out3=1;
 542   3           
 543   3              break;
 544   3      
 545   3              case 4: 
 546   3              lcd_pos(0x40);
 547   3                  for(m=0;m<16;m++)
 548   3              lcd_wdat(dis8[m]);
 549   3              k_count=0;
 550   3              out3=0;
 551   3                      out4=1;
C51 COMPILER V8.02   PCF8591_DA_LCD1602_C51                                                05/18/2013 13:51:58 PAGE 10  

 552   3              break;
 553   3           
 554   3              default:  
 555   3              out4=0; out3=0; out2=0; out1=0;
 556   3              break;
 557   3           }   
 558   2         }
 559   1         
 560   1          if(K3==0)        //启动输出
 561   1              {
 562   2                 START=1;
 563   2                 beep();
 564   2              }
 565   1      
 566   1              if(K4==0)       //停止输出
 567   1              {
 568   2                 START=0;
 569   2                 beep();
 570   2              }
 571   1      }
 572          
 573          /*******************************************************************/
 574          /*                                                                 */
 575          /*  主函数                                                         */
 576          /*                                                                 */
 577          /*******************************************************************/
 578          main()
 579          {
 580   1          uchar i;
 581   1          delay(10);                 //延时
 582   1          lcd_init();                //初始化LCD
 583   1      
 584   1          lcd_pos(0);                //设置显示位置为第一行
 585   1          for(i=0;i<16;i++) 
 586   1          lcd_wdat(dis1[i]);         //显示字符
 587   1       
 588   1      
 589   1          lcd_pos(0x40);             //设置显示位置为第二行
 590   1          for(i=0;i<16;i++)
 591   1          lcd_wdat(dis2[i]);         //显示字符
 592   1      
 593   1          delay(1500);
 594   1      
 595   1          lcd_pos(0);                //设置显示位置为第一行
 596   1          for(i=0;i<16;i++) 
 597   1          lcd_wdat(dis3[i]);         //显示字符
 598   1       
 599   1          lcd_pos(0x40);             //设置显示位置为第二行
 600   1          for(i=0;i<16;i++)
 601   1          lcd_wdat(dis4[i]);         //显示字符
 602   1      
 603   1              DAC_PCF8591(0x40);
 604   1        
 605   1              while(1)
 606   1          {
 607   2                 keyscan();
 608   2               
 609   2                 while(out1&START)
 610   2                 {
 611   3               sin();              //输出正弦波
 612   3               keyscan();
 613   3                 }
C51 COMPILER V8.02   PCF8591_DA_LCD1602_C51                                                05/18/2013 13:51:58 PAGE 11  

 614   2      
 615   2             while(out2&START)
 616   2                 {
 617   3               Square();           //输出方波
 618   3               keyscan();
 619   3                 }
 620   2      
 621   2                 while(out3&START) 
 622   2                 {
 623   3               Triangle();        //输出三角波
 624   3               keyscan();
 625   3                 }
 626   2            
 627   2                  while(out4&START)
 628   2                 {
 629   3               Sawtooth();        //输出锯齿波
 630   3               keyscan();
 631   3                 }    
 632   2          }
 633   1      }
 634          
 635          //*********************************************************


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    882    ----
   CONSTANT SIZE    =    392    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       1
   IDATA SIZE       =      4       2
   BIT SIZE         =      7       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
