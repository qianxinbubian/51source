C51 COMPILER V8.02   EX82                                                                  07/23/2009 11:16:20 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE EX82
OBJECT MODULE PLACED IN ex82.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ex82.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          //用LCD循环右移显示"Welcome to China"
   2          #include<reg52.h>    //包含单片机寄存器的头文件
   3          #include<intrins.h>  //包含_nop_()函数定义的头文件
   4          sbit RS=P2^0;    //寄存器选择位，将RS位定义为P2.0引脚
   5          sbit RW=P2^1;    //读写选择位，将RW位定义为P2.1引脚
   6          sbit E=P2^2;     //使能信号位，将E位定义为P2.2引脚
   7          sbit BF=P0^7;    //忙碌标志位，，将BF位定义为P0.7引脚
   8          unsigned char code string[ ]={"Welcome to China"}; 
   9          /*****************************************************
  10          函数功能：延时1ms
  11          (3j+2)*i=(3×33+2)×10=1010(微秒)，可以认为是1毫秒
  12          ***************************************************/
  13          void delay1ms()
  14          {
  15   1         unsigned char i,j;   
  16   1               for(i=0;i<10;i++)
  17   1                for(j=0;j<33;j++)
  18   1                 ;             
  19   1       }
  20           /*****************************************************
  21          函数功能：延时若干毫秒
  22          入口参数：n
  23          ***************************************************/
  24           void delay(unsigned char n)
  25           {
  26   1         unsigned char i;
  27   1              for(i=0;i<n;i++)
  28   1                 delay1ms();
  29   1       }
  30          /*****************************************************
  31          函数功能：判断液晶模块的忙碌状态
  32          返回值：result。result=1，忙碌;result=0，不忙
  33          ***************************************************/
  34           unsigned char BusyTest(void)
  35            {
  36   1          bit result;
  37   1              RS=0;       //根据规定，RS为低电平，RW为高电平时，可以读状态
  38   1          RW=1;
  39   1          E=1;        //E=1，才允许读写
  40   1          _nop_();   //空操作
  41   1          _nop_();
  42   1          _nop_(); 
  43   1          _nop_();   //空操作四个机器周期，给硬件反应时间     
  44   1          result=BF;  //将忙碌标志电平赋给result
  45   1              E=0;
  46   1          return result;
  47   1        }
  48          /*****************************************************
  49          函数功能：将模式设置指令或显示地址写入液晶模块
  50          入口参数：dictate
  51          ***************************************************/
  52          void WriteInstruction (unsigned char dictate)
  53          {   
  54   1          while(BusyTest()==1); //如果忙就等待
  55   1               RS=0;                  //根据规定，RS和R/W同时为低电平时，可以写入指令
C51 COMPILER V8.02   EX82                                                                  07/23/2009 11:16:20 PAGE 2   

  56   1               RW=0;   
  57   1               E=0;                   //E置低电平(根据表8-6，写指令时，E为高脉冲，
  58   1                                   // 就是让E从0到1发生正跳变，所以应先置"0"
  59   1               _nop_();
  60   1               _nop_();             //空操作两个机器周期，给硬件反应时间
  61   1               P0=dictate;            //将数据送入P0口，即写入指令或地址
  62   1               _nop_();
  63   1               _nop_();
  64   1               _nop_();
  65   1               _nop_();               //空操作四个机器周期，给硬件反应时间
  66   1               E=1;                   //E置高电平
  67   1               _nop_();
  68   1               _nop_();
  69   1               _nop_();
  70   1               _nop_();               //空操作四个机器周期，给硬件反应时间
  71   1                E=0;                  //当E由高电平跳变成低电平时，液晶模块开始执行命令
  72   1       }
  73          /*****************************************************
  74          函数功能：指定字符显示的实际地址
  75          入口参数：x
  76          ***************************************************/
  77           void WriteAddress(unsigned char x)
  78           {
  79   1           WriteInstruction(x|0x80); //显示位置的确定方法规定为"80H+地址码x"
  80   1       }
  81          /*****************************************************
  82          函数功能：将数据(字符的标准ASCII码)写入液晶模块
  83          入口参数：y(为字符常量)
  84          ***************************************************/
  85           void WriteData(unsigned char y)
  86           {
  87   1          while(BusyTest()==1);  
  88   1                RS=1;           //RS为高电平，RW为低电平时，可以写入数据
  89   1                RW=0;
  90   1                E=0;            //E置低电平(根据表8-6，写指令时，E为高脉冲，
  91   1                             // 就是让E从0到1发生正跳变，所以应先置"0"
  92   1                P0=y;           //将数据送入P0口，即将数据写入液晶模块
  93   1                _nop_();
  94   1                _nop_();
  95   1                _nop_();
  96   1           _nop_();       //空操作四个机器周期，给硬件反应时间
  97   1                E=1;          //E置高电平
  98   1                _nop_();
  99   1                _nop_();
 100   1                _nop_();
 101   1               _nop_();        //空操作四个机器周期，给硬件反应时间
 102   1               E=0;            //当E由高电平跳变成低电平时，液晶模块开始执行命令
 103   1       }
 104          /*****************************************************
 105          函数功能：对LCD的显示模式进行初始化设置
 106          ***************************************************/
 107          void LcdInitiate(void)
 108          {
 109   1         delay(15);             //延时15ms，首次写指令时应给LCD一段较长的反应时间
 110   1         WriteInstruction(0x38);  //显示模式设置：16×2显示，5×7点阵，8位数据接口
 111   1              delay(5);   //延时5ms　
 112   1              WriteInstruction(0x38);
 113   1              delay(5);
 114   1              WriteInstruction(0x38);
 115   1              delay(5);
 116   1              WriteInstruction(0x0f);  //显示模式设置：显示开，有光标，光标闪烁
 117   1              delay(5);
C51 COMPILER V8.02   EX82                                                                  07/23/2009 11:16:20 PAGE 3   

 118   1              WriteInstruction(0x06);  //显示模式设置：光标右移，字符不移
 119   1              delay(5);
 120   1              WriteInstruction(0x01);  //清屏幕指令，将以前的显示内容清除
 121   1              delay(5);
 122   1       }
 123          void main(void)            //主函数
 124           {
 125   1        unsigned char i;
 126   1        LcdInitiate();         //调用LCD初始化函数  
 127   1        delay(10);
 128   1        while(1)
 129   1           {
 130   2             WriteInstruction(0x01);//清显示：清屏幕指令
 131   2                       WriteAddress(0x00);  // 设置显示位置为第一行的第5个字
 132   2                           i = 0;
 133   2                      while(string[i] != '\0')
 134   2                              {                                               // 显示字符
 135   3                                              WriteData(string[i]);
 136   3                                              i++;
 137   3                                              delay(150);
 138   3                              }       
 139   2              for(i=0;i<4;i++)
 140   2                          delay(250);
 141   2                               
 142   2                      }
 143   1                                
 144   1                      
 145   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    230    ----
   CONSTANT SIZE    =     17    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
