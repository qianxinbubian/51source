C51 COMPILER V8.05a   16021602                                                             01/25/2016 23:57:28 PAGE 1   


C51 COMPILER V8.05a, COMPILATION OF MODULE 16021602
OBJECT MODULE PLACED IN 16021602.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE 16021602.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include < reg51.h >
   2          #include < intrins.h >
   3          #define uchar unsigned char
   4          #define uint  unsigned int
   5          sbit DQ = P3^3 ;  //定义DS18B20端口DQ  
   6          sbit BEEP=P3^6  ; //蜂鸣器驱动线
   7          bit presence  ;   //检测18b20是否插好
   8          sbit LCD_RS = P2^0 ;             
   9          sbit LCD_RW = P2^1 ;
  10          sbit LCD_EN = P2^2 ;
  11          uchar code  cdis1[ ] = {" WWW.RICHMCU.COM "} ;
  12          uchar code  cdis2[ ] = {" WENDU:    .  C "} ;
  13          uchar code  cdis3[ ] = {" DS18B20  ERR0R "} ;
  14          uchar code  cdis4[ ] = {"  PLEASE CHECK  "} ;
  15          
  16          unsigned char data  temp_data[2] = {0x00,0x00} ;
  17          unsigned char data  display[5] =   {0x00,0x00,0x00,0x00,0x00} ;
  18          unsigned char code  ditab[16] =    {0x00,0x01,0x01,0x02,0x03,0x03,0x04,0x04,
  19                                                                  0x05,0x06,0x06,0x07,0x08,0x08,0x09,0x09} ;
  20          void beep() ; 
  21          unsigned char code  mytab[8] = {0x0C,0x12,0x12,0x0C,0x00,0x00,0x00,0x00} ;
  22          
  23          #define delayNOP() ; {_nop_() ;_nop_() ;_nop_() ;_nop_() ;} ;
  24          
  25          /*******************************************************************/
  26          void delay1(int ms)
  27          {
  28   1       unsigned char y ;
  29   1        while(ms--)
  30   1       {
  31   2        for(y = 0 ; y<250 ; y++)
  32   2        {
  33   3         _nop_() ;
  34   3         _nop_() ;
  35   3         _nop_() ;
  36   3         _nop_() ;
  37   3        }
  38   2       }
  39   1      }
  40          
  41          /******************************************************************/
  42          /*检查LCD忙状态                                                   */
  43          /*lcd_busy为1时，忙，等待。lcd-busy为0时,闲，可写指令与数据。   */
  44          /******************************************************************/ 
  45          bit lcd_busy()
  46           {                          
  47   1          bit result ;
  48   1          LCD_RS = 0 ;
  49   1          LCD_RW = 1 ;
  50   1          LCD_EN = 1 ;
  51   1          delayNOP() ;
  52   1          result = (bit)(P0&0x80) ;
  53   1          LCD_EN = 0 ;
  54   1          return(result) ; 
  55   1       }
C51 COMPILER V8.05a   16021602                                                             01/25/2016 23:57:28 PAGE 2   

  56          
  57          /*写指令数据到LCD                                                  */
  58          /*RS=L，RW=L，E=高脉冲，D0-D7=指令码。          */
  59          /*******************************************************************/
  60          void lcd_wcmd(uchar cmd)
  61          {                          
  62   1         while(lcd_busy()) ;
  63   1          LCD_RS = 0 ;
  64   1          LCD_RW = 0 ;
  65   1          LCD_EN = 0 ;
  66   1          _nop_() ;
  67   1          _nop_() ; 
  68   1          P0 = cmd ;
  69   1          delayNOP() ;
  70   1          LCD_EN = 1 ;
  71   1          delayNOP() ;
  72   1          LCD_EN = 0 ;  
  73   1      }
  74          
  75          /*******************************************************************/
  76          /*写显示数据到LCD                            */
  77          /*RS=H，RW=L，E=高脉冲，D0-D7=数据。       */
  78          /*******************************************************************/
  79          void lcd_wdat(uchar dat)
  80          {                          
  81   1         while(lcd_busy()) ;
  82   1          LCD_RS = 1 ;
  83   1          LCD_RW = 0 ;
  84   1          LCD_EN = 0 ;
  85   1          P0 = dat ;
  86   1          delayNOP() ;
  87   1          LCD_EN = 1 ;
  88   1          delayNOP() ;
  89   1          LCD_EN = 0 ; 
  90   1      }
  91          
  92          
  93          /*  LCD初始化设定                                                  */
  94          /*******************************************************************/
  95          void lcd_init()
  96          { 
  97   1          delay1(15) ;   
  98   1          lcd_wcmd(0x01) ;      //清除LCD的显示内容            
  99   1          lcd_wcmd(0x38) ;      //16*2显示，5*7点阵，8位数据
 100   1          delay1(5) ;
 101   1          lcd_wcmd(0x38) ;         
 102   1          delay1(5) ;
 103   1          lcd_wcmd(0x38) ;         
 104   1          delay1(5) ;
 105   1      
 106   1          lcd_wcmd(0x0c) ;      //显示开，关光标
 107   1          delay1(5) ;
 108   1          lcd_wcmd(0x06) ;      //移动光标
 109   1          delay1(5) ;
 110   1          lcd_wcmd(0x01) ;      //清除LCD的显示内容
 111   1          delay1(5) ;
 112   1      }
 113          
 114          /*  设定显示位置                                    */
 115          /*******************************************************************/
 116          void lcd_pos(uchar pos)
 117          {                          
C51 COMPILER V8.05a   16021602                                                             01/25/2016 23:57:28 PAGE 3   

 118   1        lcd_wcmd(pos | 0x80) ;  //数据指针=80+地址变量
 119   1      }
 120          /*unsigned char data  temp_data[2] = {0x00,0x00} ;
 121          unsigned char data  display[5] =   {0x00,0x00,0x00,0x00,0x00} ;
 122          unsigned char code  ditab[16] =    {0x00,0x01,0x01,0x02,0x03,0x03,0x04,0x04,
 123                                                                  0x05,0x06,0x06,0x07,0x08,0x08,0x09,0x09} ;
 124          void beep() ; 
 125          unsigned char code  mytab[8] = {0x0C,0x12,0x12,0x0C,0x00,0x00,0x00,0x00} ;*/
 126          /*自定义字符写入CGRAM                                   */
 127          /*******************************************************************/
 128          void  writetab()  
 129          {  
 130   1          unsigned char i ;
 131   1          lcd_wcmd(0x40) ;            //写CGRAM
 132   1          for (i = 0 ; i< 8 ; i++)       
 133   1          lcd_wdat(mytab[ i ]) ;        
 134   1      }  
 135          
 136          /*us级延时函数                                        */
 137          /*******************************************************************/
 138          
 139          void Delay(unsigned int num)
 140          {
 141   1        while( --num ) ;
 142   1      }
 143          
 144          /*初始化ds1820                                      */
 145          /*******************************************************************/
 146          Init_DS18B20(void)
 147          {  
 148   1           DQ = 1 ;      //DQ复位
 149   1           Delay(8) ;    //稍做延时
 150   1      
 151   1           DQ = 0 ;      //单片机将DQ拉低
 152   1           Delay(90) ;   //精确延时 大于 480us
 153   1      
 154   1           DQ = 1 ;       //拉高总线
 155   1           Delay(8) ;
 156   1      
 157   1           presence = DQ ;    //如果=0则初始化成功 =1则初始化失败
 158   1           Delay(100) ;
 159   1           DQ = 1 ; 
 160   1           
 161   1           return(presence) ; //返回信号，0=presence,1= no presence
 162   1      }
 163          
 164          
 165          /* 读一个字节                     */
 166          /*******************************************************************/
 167           ReadOneChar(void)
 168          {
 169   1      unsigned char i = 0 ;
 170   1      unsigned char dat = 0 ;
 171   1      
 172   1      for (i = 8 ; i > 0 ; i--)
 173   1        {
 174   2          DQ = 0 ; // 给脉冲信号
 175   2          dat >>= 1 ;
 176   2          DQ = 1 ; // 给脉冲信号
 177   2      
 178   2          if(DQ)
 179   2           dat |= 0x80 ;
C51 COMPILER V8.05a   16021602                                                             01/25/2016 23:57:28 PAGE 4   

 180   2          Delay(4) ;
 181   2        }
 182   1      
 183   1          return (dat) ;
 184   1      }
 185          
 186          /* 写一个字节                                         */
 187          /*******************************************************************/
 188           WriteOneChar(unsigned char dat)
 189          {
 190   1        unsigned char i = 0 ;
 191   1        for (i = 8 ; i > 0 ; i--)
 192   1        {
 193   2          DQ = 0 ;
 194   2          DQ = dat&0x01 ;
 195   2          Delay(5) ;
 196   2      
 197   2          DQ = 1 ;
 198   2          dat>>=1 ;
 199   2        }
 200   1      }
 201          
 202          /* 读取温度                            */
 203          /*******************************************************************/
 204           Read_Temperature(void)
 205          {
 206   1           Init_DS18B20() ;
 207   1        
 208   1           WriteOneChar(0xCC) ;  // 跳过读序号列号的操作
 209   1           WriteOneChar(0x44) ;  // 启动温度转换
 210   1      
 211   1           Init_DS18B20() ;
 212   1           WriteOneChar(0xCC) ;  //跳过读序号列号的操作
 213   1           WriteOneChar(0xBE) ;  //读取温度寄存器
 214   1      
 215   1           temp_data[0] = ReadOneChar() ;   //温度低8位
 216   1           temp_data[1] = ReadOneChar() ;   //温度高8位 
 217   1      }
 218          
 219          /* 数据转换与温度显示                                              */
 220          /*******************************************************************/
 221           Disp_Temperature()
 222          { // 温度高8位SSSS Sb1b2b3    温度低8位b4b5b6b7 x1x2x3x4
 223   1       //高8位前5位是符号位，紧接着b1b2b3b4b5b6b7是整数部分，x1x2x3x4位小数部分     
 224   1        display[4]=temp_data[0]&0x0f ;//取温度低8位的低4位（小数位）
 225   1        display[0]=ditab[display[4]]+0x30 ;//查表得小数位的值 //+0x30是转换成IC码
 226   1        
 227   1        display[4]=((temp_data[0]&0xf0)>>4)|((temp_data[1]&0x0f)<<4) ;//整数部分取值
 228   1        display[3]=display[4]/100+0x30 ; //求商得百位值（显示）
 229   1        display[1]=display[4]%100 ; //求余得到十位个位数据
 230   1        display[2]=display[1]/10+0x30 ;//得到十位数据（显示）
 231   1        display[1]=display[1]%10+0x30 ;//得到个位数据（显示）
 232   1      
 233   1          if(display[3]==0x30)        //高位为0，不显示
 234   1         { 
 235   2           display[3]=0x20 ;              
 236   2           if(display[2]==0x30)      //次高位为0，不显示
 237   2           display[2]=0x20 ;
 238   2         }
 239   1      
 240   1           lcd_pos(0x48) ;             
 241   1           lcd_wdat(display[3]) ;        //百位数显示 
C51 COMPILER V8.05a   16021602                                                             01/25/2016 23:57:28 PAGE 5   

 242   1           lcd_pos(0x49) ;             
 243   1           lcd_wdat(display[2]) ;        //十位数显示 
 244   1        lcd_pos(0x4a) ;             
 245   1           lcd_wdat(display[1]) ;        //个位数显示 
 246   1        lcd_pos(0x4c) ;             
 247   1           lcd_wdat(display[0]) ;        //小数位数显示 
 248   1      }  
 249          
 250          /*******************************************************************/
 251          /* 蜂鸣器响一声                 */
 252          /*******************************************************************/
 253          void beep()
 254            {
 255   1          unsigned char y ;
 256   1          for (y=0 ;y<100 ;y++)
 257   1          {
 258   2            Delay(60) ;
 259   2            BEEP=!BEEP ;                //BEEP取反
 260   2          } 
 261   1          BEEP=1 ;                      //关闭蜂鸣器
 262   1       Delay(40000) ;
 263   1        }
 264          /*uchar code  cdis1[ ] = {" WWW.RICHMCU.COM "} ;
 265          uchar code  cdis2[ ] = {" WENDU:    .  C "} ;
 266          uchar code  cdis3[ ] = {" DS18B20  ERR0R "} ;
 267          uchar code  cdis4[ ] = {"  PLEASE CHECK  "} ; */
 268          /* DS18B20 OK 显示菜单                                             */
 269          /*******************************************************************/
 270          void  Ok_Menu ()
 271          { 
 272   1          uchar  m ;
 273   1          lcd_init() ;                //初始化LCD 
 274   1                  
 275   1          lcd_pos(0) ;                //设置显示位置为第一行的第1个字符
 276   1           m = 0 ;
 277   1          while(cdis1[m] != '\0')
 278   1           {                         //显示字符
 279   2             lcd_wdat(cdis1[m]) ;
 280   2             m++ ;
 281   2           }
 282   1      
 283   1          lcd_pos(0x40) ;             //设置显示位置为第二行第1个字符
 284   1           m = 0 ;
 285   1          while(cdis2[m] != '\0')
 286   1           {
 287   2             lcd_wdat(cdis2[m]) ;      //显示字符
 288   2             m++ ;
 289   2           }
 290   1      
 291   1           writetab() ;               //自定义字符写入CGRAM
 292   1           delay1(5) ;
 293   1           lcd_pos(0x4d) ;
 294   1           lcd_wdat(0x00) ;          //显示自定义字符
 295   1      }
 296          
 297          
 298          /* DS18B20 ERROR 显示菜单                             */
 299          /*******************************************************************/
 300          void  Error_Menu ()
 301          {
 302   1           uchar  m ;
 303   1           lcd_init() ;                //初始化LCD 
C51 COMPILER V8.05a   16021602                                                             01/25/2016 23:57:28 PAGE 6   

 304   1       
 305   1          lcd_pos(0) ;                //设置显示位置为第一行的第1个字符
 306   1           m = 0 ;
 307   1           while(cdis3[m] != '\0')
 308   1           {                         //显示字符
 309   2             lcd_wdat(cdis3[m]) ;
 310   2             m++ ;
 311   2           }
 312   1      
 313   1           lcd_pos(0x40) ;             //设置显示位置为第二行第1个字符
 314   1           m = 0 ;
 315   1           while(cdis4[m] != '\0')
 316   1           {
 317   2             lcd_wdat(cdis4[m]) ;      //显示字符
 318   2             m++ ;
 319   2           }
 320   1      }
 321          
 322          
 323          /* 主函数     */
 324          /************************************/
 325          void main()
 326           {
 327   1           Ok_Menu () ;
 328   1      
 329   1       do
 330   1        {
 331   2          Read_Temperature() ; //读取温度
 332   2         Disp_Temperature() ;  //显示温度
 333   2           }
 334   1          while(!presence)  ;
 335   1      
 336   1           Error_Menu () ;
 337   1      
 338   1       do
 339   1        {  
 340   2          Init_DS18B20() ;
 341   2          beep() ;
 342   2           }
 343   1       while(presence) ;
 344   1      }
 345          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    622    ----
   CONSTANT SIZE    =     93    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
