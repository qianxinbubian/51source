C51 COMPILER V8.02   I2C                                                                   05/18/2013 13:53:26 PAGE 1   


C51 COMPILER V8.02, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN i2c.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE i2c.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          
   2                        
   3          #include "i2c.h"
   4          #include "delay.h"
   5          
   6          #define  _Nop()  _nop_()  //定义空指令
   7                                   
   8          bit ack;                      //应答标志位
   9          
  10          sbit SDA=P3^5;
  11          sbit SCL=P3^4;
  12          
  13          /*------------------------------------------------
  14                              启动总线
  15          ------------------------------------------------*/
  16          void Start_I2c()
  17          {
  18   1        SDA=1;   //发送起始条件的数据信号
  19   1        _Nop();
  20   1        SCL=1;
  21   1        _Nop();    //起始条件建立时间大于4.7us,延时
  22   1        _Nop();
  23   1        _Nop();
  24   1        _Nop();
  25   1        _Nop();    
  26   1        SDA=0;     //发送起始信号
  27   1        _Nop();    //起始条件锁定时间大于4μ
  28   1        _Nop();
  29   1        _Nop();
  30   1        _Nop();
  31   1        _Nop();       
  32   1        SCL=0;    //钳住I2C总线，准备发送或接收数据
  33   1        _Nop();
  34   1        _Nop();
  35   1      }
  36          /*------------------------------------------------
  37                              结束总线
  38          ------------------------------------------------*/
  39          void Stop_I2c()
  40          {
  41   1        SDA=0;    //发送结束条件的数据信号
  42   1        _Nop();   //发送结束条件的时钟信号
  43   1        SCL=1;    //结束条件建立时间大于4μ
  44   1        _Nop();
  45   1        _Nop();
  46   1        _Nop();
  47   1        _Nop();
  48   1        _Nop();
  49   1        SDA=1;    //发送I2C总线结束信号
  50   1        _Nop();
  51   1        _Nop();
  52   1        _Nop();
  53   1        _Nop();
  54   1      }
  55          
C51 COMPILER V8.02   I2C                                                                   05/18/2013 13:53:26 PAGE 2   

  56          
  57          
  58          
  59          /*----------------------------------------------------------------
  60                           字节数据传送函数               
  61          函数原型: void  SendByte(unsigned char c);
  62          功能:  将数据c发送出去,可以是地址,也可以是数据,发完后等待应答,并对
  63               此状态位进行操作.(不应答或非应答都使ack=0 假)     
  64               发送数据正常，ack=1; ack=0表示被控器无应答或损坏。
  65          ------------------------------------------------------------------*/
  66          void  SendByte(unsigned char c)
  67          {
  68   1       unsigned char BitCnt;
  69   1       
  70   1       for(BitCnt=0;BitCnt<8;BitCnt++)  //要传送的数据长度为8位
  71   1          {
  72   2           if((c<<BitCnt)&0x80)SDA=1;   //判断发送位
  73   2             else  SDA=0;                
  74   2           _Nop();
  75   2           SCL=1;               //置时钟线为高，通知被控器开始接收数据位
  76   2            _Nop(); 
  77   2            _Nop();             //保证时钟高电平周期大于4μ
  78   2            _Nop();
  79   2            _Nop();
  80   2            _Nop();         
  81   2           SCL=0; 
  82   2          }
  83   1          
  84   1          _Nop();
  85   1          _Nop();
  86   1          SDA=1;               //8位发送完后释放数据线，准备接收应答位
  87   1          _Nop();
  88   1          _Nop();   
  89   1          SCL=1;
  90   1          _Nop();
  91   1          _Nop();
  92   1          _Nop();
  93   1          if(SDA==1)ack=0;     
  94   1             else ack=1;        //判断是否接收到应答信号
  95   1          SCL=0;
  96   1          _Nop();
  97   1          _Nop();
  98   1      }
  99          
 100          
 101          
 102          
 103          
 104          
 105          
 106          /*----------------------------------------------------------------
 107                           字节数据传送函数               
 108          函数原型: unsigned char  RcvByte();
 109          功能:  用来接收从器件传来的数据,并判断总线错误(不发应答信号)，
 110               发完后请用应答函数。  
 111          ------------------------------------------------------------------*/    
 112          /*unsigned char  RcvByte()
 113          {
 114            unsigned char retc;
 115            unsigned char BitCnt;
 116            
 117            retc=0; 
C51 COMPILER V8.02   I2C                                                                   05/18/2013 13:53:26 PAGE 3   

 118            SDA=1;             //置数据线为输入方式
 119            for(BitCnt=0;BitCnt<8;BitCnt++)
 120                {
 121                  _Nop();           
 122                  SCL=0;       //置时钟线为低，准备接收数据位
 123                  _Nop();
 124                  _Nop();      //时钟低电平周期大于4.7us
 125                  _Nop();
 126                  _Nop();
 127                  _Nop();
 128                  SCL=1;       //置时钟线为高使数据线上数据有效
 129                  _Nop();
 130                  _Nop();
 131                  retc=retc<<1;
 132                  if(SDA==1)retc=retc+1; //读数据位,接收的数据位放入retc中
 133                  _Nop();
 134                  _Nop(); 
 135                }
 136            SCL=0;    
 137            _Nop();
 138            _Nop();
 139            return(retc);
 140          }
 141          */
 142          
 143          
 144          /*----------------------------------------------------------------
 145                               应答子函数
 146          原型:  void Ack_I2c(void);
 147           
 148          ----------------------------------------------------------------*/
 149          /*void Ack_I2c(void)
 150          {
 151            
 152            SDA=0;     
 153            _Nop();
 154            _Nop();
 155            _Nop();      
 156            SCL=1;
 157            _Nop();
 158            _Nop();              //时钟低电平周期大于4μ
 159            _Nop();
 160            _Nop();
 161            _Nop();  
 162            SCL=0;               //清时钟线，钳住I2C总线以便继续接收
 163            _Nop();
 164            _Nop();    
 165          }*/
 166          /*----------------------------------------------------------------
 167                               非应答子函数
 168          原型:  void NoAck_I2c(void);
 169           
 170          ----------------------------------------------------------------*/
 171          /*void NoAck_I2c(void)
 172          {
 173            
 174            SDA=1;
 175            _Nop();
 176            _Nop();
 177            _Nop();      
 178            SCL=1;
 179            _Nop();
C51 COMPILER V8.02   I2C                                                                   05/18/2013 13:53:26 PAGE 4   

 180            _Nop();              //时钟低电平周期大于4μ
 181            _Nop();
 182            _Nop();
 183            _Nop();  
 184            SCL=0;                //清时钟线，钳住I2C总线以便继续接收
 185            _Nop();
 186            _Nop();    
 187          }
 188          
 189          */
 190          
 191          
 192          
 193          
 194          /*----------------------------------------------------------------
 195                              向无子地址器件发送字节数据函数               
 196          函数原型: bit  ISendByte(unsigned char sla,ucahr c);  
 197          功能:     从启动总线到发送地址，数据，结束总线的全过程,从器件地址sla.
 198                     如果返回1表示操作成功，否则操作有误。
 199          注意：    使用前必须已结束总线。
 200          ----------------------------------------------------------------*/
 201          /*bit ISendByte(unsigned char sla,unsigned char c)
 202          {
 203             Start_I2c();               //启动总线
 204             SendByte(sla);             //发送器件地址
 205               if(ack==0)return(0);
 206             SendByte(c);               //发送数据
 207               if(ack==0)return(0);
 208            Stop_I2c();                 //结束总线
 209            return(1);
 210          }
 211          */
 212          
 213          /*----------------------------------------------------------------
 214                              向有子地址器件发送多字节数据函数               
 215          函数原型: bit  ISendStr(unsigned char sla,unsigned char suba,ucahr *s,unsigned char no);  
 216          功能:     从启动总线到发送地址，子地址,数据，结束总线的全过程,从器件
 217                    地址sla，子地址suba，发送内容是s指向的内容，发送no个字节。
 218                     如果返回1表示操作成功，否则操作有误。
 219          注意：    使用前必须已结束总线。
 220          ----------------------------------------------------------------*/
 221          /*bit ISendStr(unsigned char sla,unsigned char suba,unsigned char *s,unsigned char no)
 222          {
 223             unsigned char i;
 224           for(i=0;i<no;i++)
 225              { 
 226             Start_I2c();               //启动总线
 227             SendByte(sla);             //发送器件地址
 228               if(ack==0)return(0);
 229             SendByte(suba);            //发送器件子地址
 230               if(ack==0)return(0); 
 231           
 232               SendByte(*s);            //发送数据
 233                 if(ack==0)return(0);
 234               Stop_I2c();                  //结束总线
 235                   DelayMs(1);               //必须延时等待芯片内部自动处理数据完毕
 236                   s++;
 237                   suba++;
 238              } 
 239            return(1);
 240          }
 241          */
C51 COMPILER V8.02   I2C                                                                   05/18/2013 13:53:26 PAGE 5   

 242          /*----------------------------------------------------------------
 243                              向无子地址器件读字节数据函数               
 244          函数原型: bit  IRcvByte(unsigned char sla,ucahr *c);  
 245          功能:     从启动总线到发送地址，读数据，结束总线的全过程,从器件地
 246                    址sla，返回值在c.
 247                     如果返回1表示操作成功，否则操作有误。
 248          注意：    使用前必须已结束总线。
 249          ----------------------------------------------------------------*/
 250          /*bit IRcvByte(unsigned char sla,unsigned char *c)
 251          {
 252             Start_I2c();                //启动总线
 253             SendByte(sla+1);            //发送器件地址
 254               if(ack==0)return(0);
 255             *c=RcvByte();               //读取数据
 256               NoAck_I2c();              //发送非就答位
 257               Stop_I2c();               //结束总线
 258            return(1);
 259          }
 260          
 261          */
 262          /*----------------------------------------------------------------
 263                              向有子地址器件读取多字节数据函数               
 264          函数原型: bit  ISendStr(unsigned char sla,unsigned char suba,ucahr *s,unsigned char no);  
 265          功能:     从启动总线到发送地址，子地址,读数据，结束总线的全过程,从器件
 266                    地址sla，子地址suba，读出的内容放入s指向的存储区，读no个字节。
 267                     如果返回1表示操作成功，否则操作有误。
 268          注意：    使用前必须已结束总线。
 269          ----------------------------------------------------------------*/
 270          /*bit IRcvStr(unsigned char sla,unsigned char suba,unsigned char *s,unsigned char no)
 271          {
 272             unsigned char i;
 273          
 274             Start_I2c();               //启动总线
 275             SendByte(sla);             //发送器件地址
 276               if(ack==0)return(0);
 277             SendByte(suba);            //发送器件子地址
 278               if(ack==0)return(0);
 279          
 280             Start_I2c();
 281             SendByte(sla+1);
 282                if(ack==0)return(0);
 283          
 284            for(i=0;i<no-1;i++)
 285              { 
 286               *s=RcvByte();              //发送数据
 287                Ack_I2c();                //发送就答位 
 288               s++;
 289              } 
 290             *s=RcvByte();
 291              NoAck_I2c();                 //发送非应位
 292              Stop_I2c();                    //结束总线
 293            return(1);
 294          }
 295          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     99    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
C51 COMPILER V8.02   I2C                                                                   05/18/2013 13:53:26 PAGE 6   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
